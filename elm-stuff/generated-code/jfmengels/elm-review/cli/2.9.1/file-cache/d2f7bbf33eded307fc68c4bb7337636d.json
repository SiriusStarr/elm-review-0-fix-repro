[1,[[1,1,1,57,[0,[[1,8,1,42,["NoUnsortedTopLevelDeclarationsTest"]],[1,43,1,57,[1,[[1,53,1,56,[1,"all"]]]]]]]],[[3,1,20,10,[[3,8,3,38,["NoUnsortedTopLevelDeclarations"]],[0],[1,[4,5,20,10,[1,[[5,11,5,25,[1,"alphabetically"]],[6,11,6,39,[1,"exposedOrderWithPrivateFirst"]],[7,11,7,38,[1,"exposedOrderWithPrivateLast"]],[8,11,8,46,[1,"glueDependenciesAfterFirstDependent"]],[9,11,9,45,[1,"glueDependenciesAfterLastDependent"]],[10,11,10,47,[1,"glueDependenciesBeforeFirstDependent"]],[11,11,11,46,[1,"glueDependenciesBeforeLastDependent"]],[12,11,12,27,[1,"glueHelpersAfter"]],[13,11,13,28,[1,"glueHelpersBefore"]],[14,11,14,21,[1,"portsFirst"]],[15,11,15,20,[1,"portsLast"]],[16,11,16,15,[1,"rule"]],[17,11,17,35,[1,"sortTopLevelDeclarations"]],[18,11,18,21,[1,"typesFirst"]],[19,11,19,20,[1,"typesLast"]]]]]]]],[21,1,21,19,[[21,8,21,19,["Review","Test"]],[0],[0]]],[22,1,22,44,[[22,8,22,12,["Test"]],[0],[1,[22,13,22,44,[1,[[22,23,22,27,[2,"Test"]],[22,29,22,37,[1,"describe"]],[22,39,22,43,[1,"test"]]]]]]]]],[[25,1,32,10,[0,[[0],[1,[25,1,25,11,[[25,1,25,4,"all"],[25,7,25,11,[1,[25,7,25,11,[[],"Test"]],[]]]]]],[26,1,32,10,[[26,1,26,4,"all"],[],[27,5,32,10,[0,[[27,5,27,13,[2,[],"describe"]],[27,14,27,46,[5,"NoUnsortedTopLevelDeclarations"]],[28,9,32,10,[9,[[28,11,28,17,[2,[],"passes"]],[29,11,29,20,[2,[],"orderings"]],[30,11,30,16,[2,[],"glues"]],[31,11,31,35,[2,[],"docCommentDetectionTests"]]]]]]]]]]]]],[35,1,61,10,[0,[[0],[1,[35,1,35,14,[[35,1,35,7,"passes"],[35,10,35,14,[1,[35,10,35,14,[[],"Test"]],[]]]]]],[36,1,61,10,[[36,1,36,7,"passes"],[],[37,5,61,10,[0,[[37,5,37,13,[2,[],"describe"]],[37,14,37,27,[5,"passes when"]],[38,9,61,10,[9,[[38,11,49,50,[1,"<|",1,[38,11,38,36,[0,[[38,11,38,15,[2,[],"test"]],[38,16,38,36,[5,"single declaration"]]]]],[39,13,49,50,[18,[[[39,14,39,16,[1]]],[40,17,49,50,[1,"|>",0,[40,17,48,26,[1,"|>",0,[40,17,43,4,[5,"module A exposing (..)\nf =\n    foo\n"]],[44,24,48,26,[0,[[44,24,44,39,[2,["Review","Test"],"run"]],[45,25,48,26,[7,[45,26,47,36,[1,"|>",0,[45,26,46,46,[1,"|>",0,[45,26,45,50,[2,[],"sortTopLevelDeclarations"]],[46,32,46,46,[2,[],"alphabetically"]]]],[47,32,47,36,[2,[],"rule"]]]]]]]]]]],[49,24,49,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[50,11,60,50,[1,"<|",1,[50,11,50,30,[0,[[50,11,50,15,[2,[],"test"]],[50,16,50,30,[5,"no orderings"]]]]],[51,13,60,50,[18,[[[51,14,51,16,[1]]],[52,17,60,50,[1,"|>",0,[52,17,59,26,[1,"|>",0,[52,17,55,4,[5,"module A exposing (..)\nf =\n    foo\n"]],[56,24,59,26,[0,[[56,24,56,39,[2,["Review","Test"],"run"]],[57,25,59,26,[7,[57,26,58,36,[1,"|>",0,[57,26,57,50,[2,[],"sortTopLevelDeclarations"]],[58,32,58,36,[2,[],"rule"]]]]]]]]]]],[60,24,60,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]]]]]]]]]]]]],[64,1,74,10,[0,[[0],[1,[64,1,64,17,[[64,1,64,10,"orderings"],[64,13,64,17,[1,[64,13,64,17,[[],"Test"]],[]]]]]],[65,1,74,10,[[65,1,65,10,"orderings"],[],[66,5,74,10,[0,[[66,5,66,13,[2,[],"describe"]],[66,14,66,25,[5,"orderings"]],[67,9,74,10,[9,[[67,11,67,30,[2,[],"alphabeticallyTests"]],[68,11,68,43,[2,[],"exposedOrderWithPrivateLastTests"]],[69,11,69,44,[2,[],"exposedOrderWithPrivateFirstTests"]],[70,11,70,26,[2,[],"typesFirstTests"]],[71,11,71,25,[2,[],"typesLastTests"]],[72,11,72,26,[2,[],"portsFirstTests"]],[73,11,73,25,[2,[],"portsLastTests"]]]]]]]]]]]]],[77,1,216,10,[0,[[0],[1,[77,1,77,27,[[77,1,77,20,"alphabeticallyTests"],[77,23,77,27,[1,[77,23,77,27,[[],"Test"]],[]]]]]],[78,1,216,10,[[78,1,78,20,"alphabeticallyTests"],[],[79,5,216,10,[0,[[79,5,79,13,[2,[],"describe"]],[79,14,79,30,[5,"alphabetically"]],[80,9,216,10,[9,[[80,11,95,50,[1,"<|",1,[80,11,80,37,[0,[[80,11,80,15,[2,[],"test"]],[80,16,80,37,[5,"passes when ordered"]]]]],[81,13,95,50,[18,[[[81,14,81,16,[1]]],[82,17,95,50,[1,"|>",0,[82,17,94,26,[1,"|>",0,[82,17,89,4,[5,"module A exposing (..)\nbar =\n    x\nbaz =\n    y\nfoo =\n    z\n"]],[90,24,94,26,[0,[[90,24,90,39,[2,["Review","Test"],"run"]],[91,25,94,26,[7,[91,26,93,36,[1,"|>",0,[91,26,92,46,[1,"|>",0,[91,26,91,50,[2,[],"sortTopLevelDeclarations"]],[92,32,92,46,[2,[],"alphabetically"]]]],[93,32,93,36,[2,[],"rule"]]]]]]]]]]],[95,24,95,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[96,11,143,26,[1,"<|",1,[96,11,96,38,[0,[[96,11,96,15,[2,[],"test"]],[96,16,96,38,[5,"fails when unordered"]]]]],[97,13,143,26,[18,[[[97,14,97,16,[1]]],[98,17,143,26,[1,"|>",0,[98,17,121,26,[1,"|>",0,[98,17,116,4,[5,"module A exposing (..)\n{-| A\n-}\n\n{-| foo\n-}\nfoo =\n    z\n\n{-| bar\n-}\nbar =\n    x\n\n{-| baz\n-}\nbaz =\n    y\n"]],[117,24,121,26,[0,[[117,24,117,39,[2,["Review","Test"],"run"]],[118,25,121,26,[7,[118,26,120,36,[1,"|>",0,[118,26,119,46,[1,"|>",0,[118,26,118,50,[2,[],"sortTopLevelDeclarations"]],[119,32,119,46,[2,[],"alphabetically"]]]],[120,32,120,36,[2,[],"rule"]]]]]]]]]]],[122,24,143,26,[0,[[122,24,122,48,[2,["Review","Test"],"expectErrors"]],[123,25,143,26,[9,[[123,27,142,4,[1,"|>",0,[123,27,123,46,[0,[[123,27,123,40,[2,[],"unsortedError"]],[123,41,123,46,[2,[],"False"]]]]],[124,32,142,4,[0,[[124,32,124,53,[2,["Review","Test"],"whenFixed"]],[124,54,142,4,[5,"module A exposing (..)\n{-| A\n-}\n\n{-| bar\n-}\nbar =\n    x\n\n{-| baz\n-}\nbaz =\n    y\n\n{-| foo\n-}\nfoo =\n    z\n"]]]]]]]]]]]]]]]]]]]],[144,11,167,50,[1,"<|",1,[144,11,144,60,[0,[[144,11,144,15,[2,[],"test"]],[144,16,144,60,[5,"passes when ordered with types and aliases"]]]]],[145,13,167,50,[18,[[[145,14,145,16,[1]]],[146,17,167,50,[1,"|>",0,[146,17,166,26,[1,"|>",0,[146,17,161,4,[5,"module A exposing (..)\ntype A\n    = A\n\na =\n    foo\n\nb =\n    bar\n\nz =\n    zed\n\ntype alias Z =\n    A\n"]],[162,24,166,26,[0,[[162,24,162,39,[2,["Review","Test"],"run"]],[163,25,166,26,[7,[163,26,165,36,[1,"|>",0,[163,26,164,46,[1,"|>",0,[163,26,163,50,[2,[],"sortTopLevelDeclarations"]],[164,32,164,46,[2,[],"alphabetically"]]]],[165,32,165,36,[2,[],"rule"]]]]]]]]]]],[167,24,167,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[168,11,215,26,[1,"<|",1,[168,11,168,61,[0,[[168,11,168,15,[2,[],"test"]],[168,16,168,61,[5,"fails when unordered with types and aliases"]]]]],[169,13,215,26,[18,[[[169,14,169,16,[1]]],[170,17,215,26,[1,"|>",0,[170,17,193,26,[1,"|>",0,[170,17,188,4,[5,"module A exposing (..)\n\n{-| This is fine in this order too.\n-}\ntype Bar = Bar\n\nbar =\n    x\n\n{-| This isn't!\n-}\ntype alias Zed = {}\n{-| foo\n-}\nfoo =\n    z\nbaz =\n    y\n"]],[189,24,193,26,[0,[[189,24,189,39,[2,["Review","Test"],"run"]],[190,25,193,26,[7,[190,26,192,36,[1,"|>",0,[190,26,191,46,[1,"|>",0,[190,26,190,50,[2,[],"sortTopLevelDeclarations"]],[191,32,191,46,[2,[],"alphabetically"]]]],[192,32,192,36,[2,[],"rule"]]]]]]]]]]],[194,24,215,26,[0,[[194,24,194,48,[2,["Review","Test"],"expectErrors"]],[195,25,215,26,[9,[[195,27,214,4,[1,"|>",0,[195,27,195,46,[0,[[195,27,195,40,[2,[],"unsortedError"]],[195,41,195,46,[2,[],"False"]]]]],[196,32,214,4,[0,[[196,32,196,53,[2,["Review","Test"],"whenFixed"]],[196,54,214,4,[5,"module A exposing (..)\n\n{-| This is fine in this order too.\n-}\ntype Bar = Bar\n\nbar =\n    x\n\nbaz =\n    y\n{-| foo\n-}\nfoo =\n    z\n{-| This isn't!\n-}\ntype alias Zed = {}\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[219,1,390,10,[0,[[0],[1,[219,1,219,40,[[219,1,219,33,"exposedOrderWithPrivateLastTests"],[219,36,219,40,[1,[219,36,219,40,[[],"Test"]],[]]]]]],[220,1,390,10,[[220,1,220,33,"exposedOrderWithPrivateLastTests"],[],[221,5,390,10,[0,[[221,5,221,13,[2,[],"describe"]],[221,14,221,43,[5,"exposedOrderWithPrivateLast"]],[222,9,390,10,[9,[[222,11,257,50,[1,"<|",1,[222,11,222,37,[0,[[222,11,222,15,[2,[],"test"]],[222,16,222,37,[5,"passes when ordered"]]]]],[223,13,257,50,[18,[[[223,14,223,16,[1]]],[224,17,257,50,[1,"|>",0,[224,17,256,26,[1,"|>",0,[224,17,250,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]],[251,24,256,26,[0,[[251,24,251,39,[2,["Review","Test"],"run"]],[252,25,256,26,[7,[252,26,255,36,[1,"|>",0,[252,26,254,46,[1,"|>",0,[252,26,253,59,[1,"|>",0,[252,26,252,50,[2,[],"sortTopLevelDeclarations"]],[253,32,253,59,[2,[],"exposedOrderWithPrivateLast"]]]],[254,32,254,46,[2,[],"alphabetically"]]]],[255,32,255,36,[2,[],"rule"]]]]]]]]]]],[257,24,257,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[258,11,322,26,[1,"<|",1,[258,11,258,46,[0,[[258,11,258,15,[2,[],"test"]],[258,16,258,46,[5,"falls back to second sorting"]]]]],[259,13,322,26,[18,[[[259,14,259,16,[1]]],[260,17,322,26,[1,"|>",0,[260,17,292,26,[1,"|>",0,[260,17,286,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nz =\n    zed\n\nb =\n    bar\n"]],[287,24,292,26,[0,[[287,24,287,39,[2,["Review","Test"],"run"]],[288,25,292,26,[7,[288,26,291,36,[1,"|>",0,[288,26,290,46,[1,"|>",0,[288,26,289,59,[1,"|>",0,[288,26,288,50,[2,[],"sortTopLevelDeclarations"]],[289,32,289,59,[2,[],"exposedOrderWithPrivateLast"]]]],[290,32,290,46,[2,[],"alphabetically"]]]],[291,32,291,36,[2,[],"rule"]]]]]]]]]]],[293,24,322,26,[0,[[293,24,293,48,[2,["Review","Test"],"expectErrors"]],[294,25,322,26,[9,[[294,27,321,4,[1,"|>",0,[294,27,294,46,[0,[[294,27,294,40,[2,[],"unsortedError"]],[294,41,294,46,[2,[],"False"]]]]],[295,32,321,4,[0,[[295,32,295,53,[2,["Review","Test"],"whenFixed"]],[295,54,321,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[323,11,389,26,[1,"<|",1,[323,11,323,37,[0,[[323,11,323,15,[2,[],"test"]],[323,16,323,37,[5,"fails when unsorted"]]]]],[324,13,389,26,[18,[[[324,14,324,16,[1]]],[325,17,389,26,[1,"|>",0,[325,17,358,26,[1,"|>",0,[325,17,352,4,[5,"module A exposing\n    ( a, A\n    , Z\n    )\n\n{-|\n\n@docs a, A\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n{-| A\n-}\ntype A\n    = A\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[353,24,358,26,[0,[[353,24,353,39,[2,["Review","Test"],"run"]],[354,25,358,26,[7,[354,26,357,36,[1,"|>",0,[354,26,356,46,[1,"|>",0,[354,26,355,59,[1,"|>",0,[354,26,354,50,[2,[],"sortTopLevelDeclarations"]],[355,32,355,59,[2,[],"exposedOrderWithPrivateLast"]]]],[356,32,356,46,[2,[],"alphabetically"]]]],[357,32,357,36,[2,[],"rule"]]]]]]]]]]],[359,24,389,26,[0,[[359,24,359,48,[2,["Review","Test"],"expectErrors"]],[360,25,389,26,[9,[[360,27,388,4,[1,"|>",0,[360,27,360,46,[0,[[360,27,360,40,[2,[],"unsortedError"]],[360,41,360,46,[2,[],"False"]]]]],[361,32,388,4,[0,[[361,32,361,53,[2,["Review","Test"],"whenFixed"]],[361,54,388,4,[5,"module A exposing\n    ( a, A\n    , Z\n    )\n\n{-|\n\n@docs a, A\n@docs Z\n\n-}\n\na =\n    foo\n\n{-| A\n-}\ntype A\n    = A\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[393,1,497,10,[0,[[0],[1,[393,1,393,41,[[393,1,393,34,"exposedOrderWithPrivateFirstTests"],[393,37,393,41,[1,[393,37,393,41,[[],"Test"]],[]]]]]],[394,1,497,10,[[394,1,394,34,"exposedOrderWithPrivateFirstTests"],[],[395,5,497,10,[0,[[395,5,395,13,[2,[],"describe"]],[395,14,395,44,[5,"exposedOrderWithPrivateFirst"]],[396,9,497,10,[9,[[396,11,431,50,[1,"<|",1,[396,11,396,37,[0,[[396,11,396,15,[2,[],"test"]],[396,16,396,37,[5,"passes when ordered"]]]]],[397,13,431,50,[18,[[[397,14,397,16,[1]]],[398,17,431,50,[1,"|>",0,[398,17,430,26,[1,"|>",0,[398,17,424,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n"]],[425,24,430,26,[0,[[425,24,425,39,[2,["Review","Test"],"run"]],[426,25,430,26,[7,[426,26,429,36,[1,"|>",0,[426,26,428,46,[1,"|>",0,[426,26,427,60,[1,"|>",0,[426,26,426,50,[2,[],"sortTopLevelDeclarations"]],[427,32,427,60,[2,[],"exposedOrderWithPrivateFirst"]]]],[428,32,428,46,[2,[],"alphabetically"]]]],[429,32,429,36,[2,[],"rule"]]]]]]]]]]],[431,24,431,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[432,11,496,26,[1,"<|",1,[432,11,432,37,[0,[[432,11,432,15,[2,[],"test"]],[432,16,432,37,[5,"fails when unsorted"]]]]],[433,13,496,26,[18,[[[433,14,433,16,[1]]],[434,17,496,26,[1,"|>",0,[434,17,466,26,[1,"|>",0,[434,17,460,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[461,24,466,26,[0,[[461,24,461,39,[2,["Review","Test"],"run"]],[462,25,466,26,[7,[462,26,465,36,[1,"|>",0,[462,26,464,46,[1,"|>",0,[462,26,463,60,[1,"|>",0,[462,26,462,50,[2,[],"sortTopLevelDeclarations"]],[463,32,463,60,[2,[],"exposedOrderWithPrivateFirst"]]]],[464,32,464,46,[2,[],"alphabetically"]]]],[465,32,465,36,[2,[],"rule"]]]]]]]]]]],[467,24,496,26,[0,[[467,24,467,48,[2,["Review","Test"],"expectErrors"]],[468,25,496,26,[9,[[468,27,495,4,[1,"|>",0,[468,27,468,46,[0,[[468,27,468,40,[2,[],"unsortedError"]],[468,41,468,46,[2,[],"False"]]]]],[469,32,495,4,[0,[[469,32,469,53,[2,["Review","Test"],"whenFixed"]],[469,54,495,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[500,1,618,10,[0,[[0],[1,[500,1,500,23,[[500,1,500,16,"typesFirstTests"],[500,19,500,23,[1,[500,19,500,23,[[],"Test"]],[]]]]]],[501,1,618,10,[[501,1,501,16,"typesFirstTests"],[],[502,5,618,10,[0,[[502,5,502,13,[2,[],"describe"]],[502,14,502,26,[5,"typesFirst"]],[503,9,618,10,[9,[[503,11,543,50,[1,"<|",1,[503,11,503,37,[0,[[503,11,503,15,[2,[],"test"]],[503,16,503,37,[5,"passes when ordered"]]]]],[504,13,543,50,[18,[[[504,14,504,16,[1]]],[505,17,543,50,[1,"|>",0,[505,17,542,26,[1,"|>",0,[505,17,535,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n{-| Z\n-}\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\nc =\n    bar\n"]],[536,24,542,26,[0,[[536,24,536,39,[2,["Review","Test"],"run"]],[537,25,542,26,[7,[537,26,541,36,[1,"|>",0,[537,26,540,46,[1,"|>",0,[537,26,539,59,[1,"|>",0,[537,26,538,42,[1,"|>",0,[537,26,537,50,[2,[],"sortTopLevelDeclarations"]],[538,32,538,42,[2,[],"typesFirst"]]]],[539,32,539,59,[2,[],"exposedOrderWithPrivateLast"]]]],[540,32,540,46,[2,[],"alphabetically"]]]],[541,32,541,36,[2,[],"rule"]]]]]]]]]]],[543,24,543,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[544,11,617,26,[1,"<|",1,[544,11,544,37,[0,[[544,11,544,15,[2,[],"test"]],[544,16,544,37,[5,"fails when unsorted"]]]]],[545,13,617,26,[18,[[[545,14,545,16,[1]]],[546,17,617,26,[1,"|>",0,[546,17,583,26,[1,"|>",0,[546,17,576,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n{-| Z\n-}\ntype alias Z =\n    A\n\na =\n    foo\n"]],[577,24,583,26,[0,[[577,24,577,39,[2,["Review","Test"],"run"]],[578,25,583,26,[7,[578,26,582,36,[1,"|>",0,[578,26,581,46,[1,"|>",0,[578,26,580,59,[1,"|>",0,[578,26,579,42,[1,"|>",0,[578,26,578,50,[2,[],"sortTopLevelDeclarations"]],[579,32,579,42,[2,[],"typesFirst"]]]],[580,32,580,59,[2,[],"exposedOrderWithPrivateLast"]]]],[581,32,581,46,[2,[],"alphabetically"]]]],[582,32,582,36,[2,[],"rule"]]]]]]]]]]],[584,24,617,26,[0,[[584,24,584,48,[2,["Review","Test"],"expectErrors"]],[585,25,617,26,[9,[[585,27,616,4,[1,"|>",0,[585,27,585,45,[0,[[585,27,585,40,[2,[],"unsortedError"]],[585,41,585,45,[2,[],"True"]]]]],[586,32,616,4,[0,[[586,32,586,53,[2,["Review","Test"],"whenFixed"]],[586,54,616,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n{-| Z\n-}\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\nc =\n    bar\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[621,1,733,10,[0,[[0],[1,[621,1,621,22,[[621,1,621,15,"typesLastTests"],[621,18,621,22,[1,[621,18,621,22,[[],"Test"]],[]]]]]],[622,1,733,10,[[622,1,622,15,"typesLastTests"],[],[623,5,733,10,[0,[[623,5,623,13,[2,[],"describe"]],[623,14,623,25,[5,"typesLast"]],[624,9,733,10,[9,[[624,11,662,50,[1,"<|",1,[624,11,624,37,[0,[[624,11,624,15,[2,[],"test"]],[624,16,624,37,[5,"passes when ordered"]]]]],[625,13,662,50,[18,[[[625,14,625,16,[1]]],[626,17,662,50,[1,"|>",0,[626,17,661,26,[1,"|>",0,[626,17,654,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nz =\n    zed\n\na =\n    foo\n\nport b: String -> Cmd msg\n\nc =\n    bar\n\ntype A\n    = A\n\ntype alias Z =\n    A\n"]],[655,24,661,26,[0,[[655,24,655,39,[2,["Review","Test"],"run"]],[656,25,661,26,[7,[656,26,660,36,[1,"|>",0,[656,26,659,46,[1,"|>",0,[656,26,658,59,[1,"|>",0,[656,26,657,41,[1,"|>",0,[656,26,656,50,[2,[],"sortTopLevelDeclarations"]],[657,32,657,41,[2,[],"typesLast"]]]],[658,32,658,59,[2,[],"exposedOrderWithPrivateLast"]]]],[659,32,659,46,[2,[],"alphabetically"]]]],[660,32,660,36,[2,[],"rule"]]]]]]]]]]],[662,24,662,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[663,11,732,26,[1,"<|",1,[663,11,663,37,[0,[[663,11,663,15,[2,[],"test"]],[663,16,663,37,[5,"fails when unsorted"]]]]],[664,13,732,26,[18,[[[664,14,664,16,[1]]],[665,17,732,26,[1,"|>",0,[665,17,700,26,[1,"|>",0,[665,17,693,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\ntype A\n    = A\n\nz =\n    zed\n\nport b: String -> Cmd msg\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[694,24,700,26,[0,[[694,24,694,39,[2,["Review","Test"],"run"]],[695,25,700,26,[7,[695,26,699,36,[1,"|>",0,[695,26,698,46,[1,"|>",0,[695,26,697,59,[1,"|>",0,[695,26,696,41,[1,"|>",0,[695,26,695,50,[2,[],"sortTopLevelDeclarations"]],[696,32,696,41,[2,[],"typesLast"]]]],[697,32,697,59,[2,[],"exposedOrderWithPrivateLast"]]]],[698,32,698,46,[2,[],"alphabetically"]]]],[699,32,699,36,[2,[],"rule"]]]]]]]]]]],[701,24,732,26,[0,[[701,24,701,48,[2,["Review","Test"],"expectErrors"]],[702,25,732,26,[9,[[702,27,731,4,[1,"|>",0,[702,27,702,45,[0,[[702,27,702,40,[2,[],"unsortedError"]],[702,41,702,45,[2,[],"True"]]]]],[703,32,731,4,[0,[[703,32,703,53,[2,["Review","Test"],"whenFixed"]],[703,54,731,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nz =\n    zed\n\na =\n    foo\n\nport b: String -> Cmd msg\n\nc =\n    bar\n\ntype A\n    = A\n\ntype alias Z =\n    A\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[736,1,850,10,[0,[[0],[1,[736,1,736,23,[[736,1,736,16,"portsFirstTests"],[736,19,736,23,[1,[736,19,736,23,[[],"Test"]],[]]]]]],[737,1,850,10,[[737,1,737,16,"portsFirstTests"],[],[738,5,850,10,[0,[[738,5,738,13,[2,[],"describe"]],[738,14,738,26,[5,"portsFirst"]],[739,9,850,10,[9,[[739,11,778,50,[1,"<|",1,[739,11,739,37,[0,[[739,11,739,15,[2,[],"test"]],[739,16,739,37,[5,"passes when ordered"]]]]],[740,13,778,50,[18,[[[740,14,740,16,[1]]],[741,17,778,50,[1,"|>",0,[741,17,777,26,[1,"|>",0,[741,17,769,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n"]],[770,24,777,26,[0,[[770,24,770,39,[2,["Review","Test"],"run"]],[771,25,777,26,[7,[771,26,776,36,[1,"|>",0,[771,26,775,46,[1,"|>",0,[771,26,774,59,[1,"|>",0,[771,26,773,42,[1,"|>",0,[771,26,772,42,[1,"|>",0,[771,26,771,50,[2,[],"sortTopLevelDeclarations"]],[772,32,772,42,[2,[],"portsFirst"]]]],[773,32,773,42,[2,[],"typesFirst"]]]],[774,32,774,59,[2,[],"exposedOrderWithPrivateLast"]]]],[775,32,775,46,[2,[],"alphabetically"]]]],[776,32,776,36,[2,[],"rule"]]]]]]]]]]],[778,24,778,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[779,11,849,26,[1,"<|",1,[779,11,779,37,[0,[[779,11,779,15,[2,[],"test"]],[779,16,779,37,[5,"fails when unsorted"]]]]],[780,13,849,26,[18,[[[780,14,780,16,[1]]],[781,17,849,26,[1,"|>",0,[781,17,817,26,[1,"|>",0,[781,17,809,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[810,24,817,26,[0,[[810,24,810,39,[2,["Review","Test"],"run"]],[811,25,817,26,[7,[811,26,816,36,[1,"|>",0,[811,26,815,46,[1,"|>",0,[811,26,814,59,[1,"|>",0,[811,26,813,42,[1,"|>",0,[811,26,812,42,[1,"|>",0,[811,26,811,50,[2,[],"sortTopLevelDeclarations"]],[812,32,812,42,[2,[],"portsFirst"]]]],[813,32,813,42,[2,[],"typesFirst"]]]],[814,32,814,59,[2,[],"exposedOrderWithPrivateLast"]]]],[815,32,815,46,[2,[],"alphabetically"]]]],[816,32,816,36,[2,[],"rule"]]]]]]]]]]],[818,24,849,26,[0,[[818,24,818,48,[2,["Review","Test"],"expectErrors"]],[819,25,849,26,[9,[[819,27,848,4,[1,"|>",0,[819,27,819,45,[0,[[819,27,819,40,[2,[],"unsortedError"]],[819,41,819,45,[2,[],"True"]]]]],[820,32,848,4,[0,[[820,32,820,53,[2,["Review","Test"],"whenFixed"]],[820,54,848,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[853,1,967,10,[0,[[0],[1,[853,1,853,22,[[853,1,853,15,"portsLastTests"],[853,18,853,22,[1,[853,18,853,22,[[],"Test"]],[]]]]]],[854,1,967,10,[[854,1,854,15,"portsLastTests"],[],[855,5,967,10,[0,[[855,5,855,13,[2,[],"describe"]],[855,14,855,25,[5,"portsLast"]],[856,9,967,10,[9,[[856,11,895,50,[1,"<|",1,[856,11,856,37,[0,[[856,11,856,15,[2,[],"test"]],[856,16,856,37,[5,"passes when ordered"]]]]],[857,13,895,50,[18,[[[857,14,857,16,[1]]],[858,17,895,50,[1,"|>",0,[858,17,894,26,[1,"|>",0,[858,17,886,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n\nport b: String -> Cmd msg\n"]],[887,24,894,26,[0,[[887,24,887,39,[2,["Review","Test"],"run"]],[888,25,894,26,[7,[888,26,893,36,[1,"|>",0,[888,26,892,46,[1,"|>",0,[888,26,891,59,[1,"|>",0,[888,26,890,42,[1,"|>",0,[888,26,889,41,[1,"|>",0,[888,26,888,50,[2,[],"sortTopLevelDeclarations"]],[889,32,889,41,[2,[],"portsLast"]]]],[890,32,890,42,[2,[],"typesFirst"]]]],[891,32,891,59,[2,[],"exposedOrderWithPrivateLast"]]]],[892,32,892,46,[2,[],"alphabetically"]]]],[893,32,893,36,[2,[],"rule"]]]]]]]]]]],[895,24,895,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[896,11,966,26,[1,"<|",1,[896,11,896,37,[0,[[896,11,896,15,[2,[],"test"]],[896,16,896,37,[5,"fails when unsorted"]]]]],[897,13,966,26,[18,[[[897,14,897,16,[1]]],[898,17,966,26,[1,"|>",0,[898,17,934,26,[1,"|>",0,[898,17,926,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[927,24,934,26,[0,[[927,24,927,39,[2,["Review","Test"],"run"]],[928,25,934,26,[7,[928,26,933,36,[1,"|>",0,[928,26,932,46,[1,"|>",0,[928,26,931,59,[1,"|>",0,[928,26,930,42,[1,"|>",0,[928,26,929,41,[1,"|>",0,[928,26,928,50,[2,[],"sortTopLevelDeclarations"]],[929,32,929,41,[2,[],"portsLast"]]]],[930,32,930,42,[2,[],"typesFirst"]]]],[931,32,931,59,[2,[],"exposedOrderWithPrivateLast"]]]],[932,32,932,46,[2,[],"alphabetically"]]]],[933,32,933,36,[2,[],"rule"]]]]]]]]]]],[935,24,966,26,[0,[[935,24,935,48,[2,["Review","Test"],"expectErrors"]],[936,25,966,26,[9,[[936,27,965,4,[1,"|>",0,[936,27,936,45,[0,[[936,27,936,40,[2,[],"unsortedError"]],[936,41,936,45,[2,[],"True"]]]]],[937,32,965,4,[0,[[937,32,937,53,[2,["Review","Test"],"whenFixed"]],[937,54,965,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n\nport b: String -> Cmd msg\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[970,1,979,10,[0,[[0],[1,[970,1,970,13,[[970,1,970,6,"glues"],[970,9,970,13,[1,[970,9,970,13,[[],"Test"]],[]]]]]],[971,1,979,10,[[971,1,971,6,"glues"],[],[972,5,979,10,[0,[[972,5,972,13,[2,[],"describe"]],[972,14,972,21,[5,"glues"]],[973,9,979,10,[9,[[973,11,973,33,[2,[],"glueHelpersBeforeTests"]],[974,11,974,32,[2,[],"glueHelpersAfterTests"]],[975,11,975,52,[2,[],"glueDependenciesBeforeFirstDependentTests"]],[976,11,976,51,[2,[],"glueDependenciesAfterFirstDependentTests"]],[977,11,977,51,[2,[],"glueDependenciesBeforeLastDependentTests"]],[978,11,978,50,[2,[],"glueDependenciesAfterLastDependentTests"]]]]]]]]]]]]],[982,1,1391,10,[0,[[0],[1,[982,1,982,30,[[982,1,982,23,"glueHelpersBeforeTests"],[982,26,982,30,[1,[982,26,982,30,[[],"Test"]],[]]]]]],[983,1,1391,10,[[983,1,983,23,"glueHelpersBeforeTests"],[],[984,5,1391,10,[0,[[984,5,984,13,[2,[],"describe"]],[984,14,984,33,[5,"glueHelpersBefore"]],[985,9,1391,10,[9,[[985,11,1024,50,[1,"<|",1,[985,11,985,37,[0,[[985,11,985,15,[2,[],"test"]],[985,16,985,37,[5,"passes when ordered"]]]]],[986,13,1024,50,[18,[[[986,14,986,16,[1]]],[987,17,1024,50,[1,"|>",0,[987,17,1023,26,[1,"|>",0,[987,17,1016,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    foo\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1017,24,1023,26,[0,[[1017,24,1017,39,[2,["Review","Test"],"run"]],[1018,25,1023,26,[7,[1018,26,1022,36,[1,"|>",0,[1018,26,1021,49,[1,"|>",0,[1018,26,1020,46,[1,"|>",0,[1018,26,1019,59,[1,"|>",0,[1018,26,1018,50,[2,[],"sortTopLevelDeclarations"]],[1019,32,1019,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1020,32,1020,46,[2,[],"alphabetically"]]]],[1021,32,1021,49,[2,[],"glueHelpersBefore"]]]],[1022,32,1022,36,[2,[],"rule"]]]]]]]]]]],[1024,24,1024,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1025,11,1064,50,[1,"<|",1,[1025,11,1025,39,[0,[[1025,11,1025,15,[2,[],"test"]],[1025,16,1025,39,[5,"ports are not helpers"]]]]],[1026,13,1064,50,[18,[[[1026,14,1026,16,[1]]],[1027,17,1064,50,[1,"|>",0,[1027,17,1063,26,[1,"|>",0,[1027,17,1055,4,[5,"port module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport calledInB : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1056,24,1063,26,[0,[[1056,24,1056,39,[2,["Review","Test"],"run"]],[1057,25,1063,26,[7,[1057,26,1062,36,[1,"|>",0,[1057,26,1061,49,[1,"|>",0,[1057,26,1060,46,[1,"|>",0,[1057,26,1059,59,[1,"|>",0,[1057,26,1058,42,[1,"|>",0,[1057,26,1057,50,[2,[],"sortTopLevelDeclarations"]],[1058,32,1058,42,[2,[],"portsFirst"]]]],[1059,32,1059,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1060,32,1060,46,[2,[],"alphabetically"]]]],[1061,32,1061,49,[2,[],"glueHelpersBefore"]]]],[1062,32,1062,36,[2,[],"rule"]]]]]]]]]]],[1064,24,1064,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1065,11,1104,50,[1,"<|",1,[1065,11,1065,57,[0,[[1065,11,1065,15,[2,[],"test"]],[1065,16,1065,57,[5,"is not helper if used in multiple funcs"]]]]],[1066,13,1104,50,[18,[[[1066,14,1066,16,[1]]],[1067,17,1104,50,[1,"|>",0,[1067,17,1103,26,[1,"|>",0,[1067,17,1096,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo calledInB\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    foo\n\nz =\n    zed\n"]],[1097,24,1103,26,[0,[[1097,24,1097,39,[2,["Review","Test"],"run"]],[1098,25,1103,26,[7,[1098,26,1102,36,[1,"|>",0,[1098,26,1101,49,[1,"|>",0,[1098,26,1100,46,[1,"|>",0,[1098,26,1099,59,[1,"|>",0,[1098,26,1098,50,[2,[],"sortTopLevelDeclarations"]],[1099,32,1099,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1100,32,1100,46,[2,[],"alphabetically"]]]],[1101,32,1101,49,[2,[],"glueHelpersBefore"]]]],[1102,32,1102,36,[2,[],"rule"]]]]]]]]]]],[1104,24,1104,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1105,11,1144,50,[1,"<|",1,[1105,11,1105,39,[0,[[1105,11,1105,15,[2,[],"test"]],[1105,16,1105,39,[5,"does not glue to self"]]]]],[1106,13,1144,50,[18,[[[1106,14,1106,16,[1]]],[1107,17,1144,50,[1,"|>",0,[1107,17,1143,26,[1,"|>",0,[1107,17,1136,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    calledInB\n\nb =\n    bar calledInB\n\nz =\n    z\n"]],[1137,24,1143,26,[0,[[1137,24,1137,39,[2,["Review","Test"],"run"]],[1138,25,1143,26,[7,[1138,26,1142,36,[1,"|>",0,[1138,26,1141,49,[1,"|>",0,[1138,26,1140,46,[1,"|>",0,[1138,26,1139,59,[1,"|>",0,[1138,26,1138,50,[2,[],"sortTopLevelDeclarations"]],[1139,32,1139,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1140,32,1140,46,[2,[],"alphabetically"]]]],[1141,32,1141,49,[2,[],"glueHelpersBefore"]]]],[1142,32,1142,36,[2,[],"rule"]]]]]]]]]]],[1144,24,1144,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1145,11,1222,26,[1,"<|",1,[1145,11,1145,40,[0,[[1145,11,1145,15,[2,[],"test"]],[1145,16,1145,40,[5,"fails when not ordered"]]]]],[1146,13,1222,26,[18,[[[1146,14,1146,16,[1]]],[1147,17,1222,26,[1,"|>",0,[1147,17,1186,26,[1,"|>",0,[1147,17,1179,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n\ndalledInB =\n    foo\n\ncalledInB =\n    foo\n"]],[1180,24,1186,26,[0,[[1180,24,1180,39,[2,["Review","Test"],"run"]],[1181,25,1186,26,[7,[1181,26,1185,36,[1,"|>",0,[1181,26,1184,49,[1,"|>",0,[1181,26,1183,46,[1,"|>",0,[1181,26,1182,59,[1,"|>",0,[1181,26,1181,50,[2,[],"sortTopLevelDeclarations"]],[1182,32,1182,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1183,32,1183,46,[2,[],"alphabetically"]]]],[1184,32,1184,49,[2,[],"glueHelpersBefore"]]]],[1185,32,1185,36,[2,[],"rule"]]]]]]]]]]],[1187,24,1222,26,[0,[[1187,24,1187,48,[2,["Review","Test"],"expectErrors"]],[1188,25,1222,26,[9,[[1188,27,1221,4,[1,"|>",0,[1188,27,1188,46,[0,[[1188,27,1188,40,[2,[],"unsortedError"]],[1188,41,1188,46,[2,[],"False"]]]]],[1189,32,1221,4,[0,[[1189,32,1189,53,[2,["Review","Test"],"whenFixed"]],[1189,54,1221,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    foo\n\ndalledInB =\n    foo\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1223,11,1318,26,[1,"<|",1,[1223,11,1223,65,[0,[[1223,11,1223,15,[2,[],"test"]],[1223,16,1223,65,[5,"chains properly and ignores mutual dependencies"]]]]],[1224,13,1318,26,[18,[[[1224,14,1224,16,[1]]],[1225,17,1318,26,[1,"|>",0,[1225,17,1273,26,[1,"|>",0,[1225,17,1266,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nmutualDep3 =\n    mutualDep1\n\nb =\n    bar calledInB\n\nmutualDep2 =\n    bar mutualDep3\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nz =\n    zed\n\ncalledInB =\n    calledInBHelp foo\n"]],[1267,24,1273,26,[0,[[1267,24,1267,39,[2,["Review","Test"],"run"]],[1268,25,1273,26,[7,[1268,26,1272,36,[1,"|>",0,[1268,26,1271,49,[1,"|>",0,[1268,26,1270,46,[1,"|>",0,[1268,26,1269,59,[1,"|>",0,[1268,26,1268,50,[2,[],"sortTopLevelDeclarations"]],[1269,32,1269,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1270,32,1270,46,[2,[],"alphabetically"]]]],[1271,32,1271,49,[2,[],"glueHelpersBefore"]]]],[1272,32,1272,36,[2,[],"rule"]]]]]]]]]]],[1274,24,1318,26,[0,[[1274,24,1274,48,[2,["Review","Test"],"expectErrors"]],[1275,25,1318,26,[9,[[1275,27,1317,4,[1,"|>",0,[1275,27,1275,46,[0,[[1275,27,1275,40,[2,[],"unsortedError"]],[1275,41,1275,46,[2,[],"False"]]]]],[1276,32,1317,4,[0,[[1276,32,1276,53,[2,["Review","Test"],"whenFixed"]],[1276,54,1317,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInBHelp =\n    bar\n\ncalledInB =\n    calledInBHelp foo\n\nb =\n    bar calledInB\n\nmutualDep1 =\n    mutualDep2\n\nmutualDep2 =\n    bar mutualDep3\n\nmutualDep3 =\n    mutualDep1\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1319,11,1390,26,[1,"<|",1,[1319,11,1319,76,[0,[[1319,11,1319,15,[2,[],"test"]],[1319,16,1319,76,[5,"handles mutual recursion when one is not viable for gluing"]]]]],[1320,13,1390,26,[18,[[[1320,14,1320,16,[1]]],[1321,17,1390,26,[1,"|>",0,[1321,17,1357,26,[1,"|>",0,[1321,17,1350,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\naHelp =\n    a\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]],[1351,24,1357,26,[0,[[1351,24,1351,39,[2,["Review","Test"],"run"]],[1352,25,1357,26,[7,[1352,26,1356,36,[1,"|>",0,[1352,26,1355,49,[1,"|>",0,[1352,26,1354,46,[1,"|>",0,[1352,26,1353,59,[1,"|>",0,[1352,26,1352,50,[2,[],"sortTopLevelDeclarations"]],[1353,32,1353,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1354,32,1354,46,[2,[],"alphabetically"]]]],[1355,32,1355,49,[2,[],"glueHelpersBefore"]]]],[1356,32,1356,36,[2,[],"rule"]]]]]]]]]]],[1358,24,1390,26,[0,[[1358,24,1358,48,[2,["Review","Test"],"expectErrors"]],[1359,25,1390,26,[9,[[1359,27,1389,4,[1,"|>",0,[1359,27,1359,46,[0,[[1359,27,1359,40,[2,[],"unsortedError"]],[1359,41,1359,46,[2,[],"False"]]]]],[1360,32,1389,4,[0,[[1360,32,1360,53,[2,["Review","Test"],"whenFixed"]],[1360,54,1389,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\naHelp =\n    a\n\na =\n    aHelp\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1394,1,1723,10,[0,[[0],[1,[1394,1,1394,29,[[1394,1,1394,22,"glueHelpersAfterTests"],[1394,25,1394,29,[1,[1394,25,1394,29,[[],"Test"]],[]]]]]],[1395,1,1723,10,[[1395,1,1395,22,"glueHelpersAfterTests"],[],[1396,5,1723,10,[0,[[1396,5,1396,13,[2,[],"describe"]],[1396,14,1396,32,[5,"glueHelpersAfter"]],[1397,9,1723,10,[9,[[1397,11,1436,50,[1,"<|",1,[1397,11,1397,37,[0,[[1397,11,1397,15,[2,[],"test"]],[1397,16,1397,37,[5,"passes when ordered"]]]]],[1398,13,1436,50,[18,[[[1398,14,1398,16,[1]]],[1399,17,1436,50,[1,"|>",0,[1399,17,1435,26,[1,"|>",0,[1399,17,1428,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    foo\n\nz =\n    zed\n"]],[1429,24,1435,26,[0,[[1429,24,1429,39,[2,["Review","Test"],"run"]],[1430,25,1435,26,[7,[1430,26,1434,36,[1,"|>",0,[1430,26,1433,48,[1,"|>",0,[1430,26,1432,46,[1,"|>",0,[1430,26,1431,59,[1,"|>",0,[1430,26,1430,50,[2,[],"sortTopLevelDeclarations"]],[1431,32,1431,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1432,32,1432,46,[2,[],"alphabetically"]]]],[1433,32,1433,48,[2,[],"glueHelpersAfter"]]]],[1434,32,1434,36,[2,[],"rule"]]]]]]]]]]],[1436,24,1436,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1437,11,1476,50,[1,"<|",1,[1437,11,1437,39,[0,[[1437,11,1437,15,[2,[],"test"]],[1437,16,1437,39,[5,"ports are not helpers"]]]]],[1438,13,1476,50,[18,[[[1438,14,1438,16,[1]]],[1439,17,1476,50,[1,"|>",0,[1439,17,1475,26,[1,"|>",0,[1439,17,1467,4,[5,"port module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport calledInB : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1468,24,1475,26,[0,[[1468,24,1468,39,[2,["Review","Test"],"run"]],[1469,25,1475,26,[7,[1469,26,1474,36,[1,"|>",0,[1469,26,1473,48,[1,"|>",0,[1469,26,1472,46,[1,"|>",0,[1469,26,1471,59,[1,"|>",0,[1469,26,1470,42,[1,"|>",0,[1469,26,1469,50,[2,[],"sortTopLevelDeclarations"]],[1470,32,1470,42,[2,[],"portsFirst"]]]],[1471,32,1471,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1472,32,1472,46,[2,[],"alphabetically"]]]],[1473,32,1473,48,[2,[],"glueHelpersAfter"]]]],[1474,32,1474,36,[2,[],"rule"]]]]]]]]]]],[1476,24,1476,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1477,11,1554,26,[1,"<|",1,[1477,11,1477,40,[0,[[1477,11,1477,15,[2,[],"test"]],[1477,16,1477,40,[5,"fails when not ordered"]]]]],[1478,13,1554,26,[18,[[[1478,14,1478,16,[1]]],[1479,17,1554,26,[1,"|>",0,[1479,17,1518,26,[1,"|>",0,[1479,17,1511,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n\ndalledInB =\n    foo\n\ncalledInB =\n    foo\n"]],[1512,24,1518,26,[0,[[1512,24,1512,39,[2,["Review","Test"],"run"]],[1513,25,1518,26,[7,[1513,26,1517,36,[1,"|>",0,[1513,26,1516,48,[1,"|>",0,[1513,26,1515,46,[1,"|>",0,[1513,26,1514,59,[1,"|>",0,[1513,26,1513,50,[2,[],"sortTopLevelDeclarations"]],[1514,32,1514,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1515,32,1515,46,[2,[],"alphabetically"]]]],[1516,32,1516,48,[2,[],"glueHelpersAfter"]]]],[1517,32,1517,36,[2,[],"rule"]]]]]]]]]]],[1519,24,1554,26,[0,[[1519,24,1519,48,[2,["Review","Test"],"expectErrors"]],[1520,25,1554,26,[9,[[1520,27,1553,4,[1,"|>",0,[1520,27,1520,46,[0,[[1520,27,1520,40,[2,[],"unsortedError"]],[1520,41,1520,46,[2,[],"False"]]]]],[1521,32,1553,4,[0,[[1521,32,1521,53,[2,["Review","Test"],"whenFixed"]],[1521,54,1553,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\ncalledInB =\n    foo\n\ndalledInB =\n    foo\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1555,11,1650,26,[1,"<|",1,[1555,11,1555,65,[0,[[1555,11,1555,15,[2,[],"test"]],[1555,16,1555,65,[5,"chains properly and ignores mutual dependencies"]]]]],[1556,13,1650,26,[18,[[[1556,14,1556,16,[1]]],[1557,17,1650,26,[1,"|>",0,[1557,17,1605,26,[1,"|>",0,[1557,17,1598,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nmutualDep3 =\n    mutualDep1\n\nb =\n    bar calledInB\n\nmutualDep2 =\n    bar mutualDep3\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nz =\n    zed\n\ncalledInB =\n    calledInBHelp foo\n"]],[1599,24,1605,26,[0,[[1599,24,1599,39,[2,["Review","Test"],"run"]],[1600,25,1605,26,[7,[1600,26,1604,36,[1,"|>",0,[1600,26,1603,48,[1,"|>",0,[1600,26,1602,46,[1,"|>",0,[1600,26,1601,59,[1,"|>",0,[1600,26,1600,50,[2,[],"sortTopLevelDeclarations"]],[1601,32,1601,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1602,32,1602,46,[2,[],"alphabetically"]]]],[1603,32,1603,48,[2,[],"glueHelpersAfter"]]]],[1604,32,1604,36,[2,[],"rule"]]]]]]]]]]],[1606,24,1650,26,[0,[[1606,24,1606,48,[2,["Review","Test"],"expectErrors"]],[1607,25,1650,26,[9,[[1607,27,1649,4,[1,"|>",0,[1607,27,1607,46,[0,[[1607,27,1607,40,[2,[],"unsortedError"]],[1607,41,1607,46,[2,[],"False"]]]]],[1608,32,1649,4,[0,[[1608,32,1608,53,[2,["Review","Test"],"whenFixed"]],[1608,54,1649,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    calledInBHelp foo\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nmutualDep2 =\n    bar mutualDep3\n\nmutualDep3 =\n    mutualDep1\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1651,11,1722,26,[1,"<|",1,[1651,11,1651,76,[0,[[1651,11,1651,15,[2,[],"test"]],[1651,16,1651,76,[5,"handles mutual recursion when one is not viable for gluing"]]]]],[1652,13,1722,26,[18,[[[1652,14,1652,16,[1]]],[1653,17,1722,26,[1,"|>",0,[1653,17,1689,26,[1,"|>",0,[1653,17,1682,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\ntype alias Z =\n    A\n\naHelp =\n    a\n\nb =\n    bar\n\nz =\n    zed\n"]],[1683,24,1689,26,[0,[[1683,24,1683,39,[2,["Review","Test"],"run"]],[1684,25,1689,26,[7,[1684,26,1688,36,[1,"|>",0,[1684,26,1687,48,[1,"|>",0,[1684,26,1686,46,[1,"|>",0,[1684,26,1685,59,[1,"|>",0,[1684,26,1684,50,[2,[],"sortTopLevelDeclarations"]],[1685,32,1685,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1686,32,1686,46,[2,[],"alphabetically"]]]],[1687,32,1687,48,[2,[],"glueHelpersAfter"]]]],[1688,32,1688,36,[2,[],"rule"]]]]]]]]]]],[1690,24,1722,26,[0,[[1690,24,1690,48,[2,["Review","Test"],"expectErrors"]],[1691,25,1722,26,[9,[[1691,27,1721,4,[1,"|>",0,[1691,27,1691,46,[0,[[1691,27,1691,40,[2,[],"unsortedError"]],[1691,41,1691,46,[2,[],"False"]]]]],[1692,32,1721,4,[0,[[1692,32,1692,53,[2,["Review","Test"],"whenFixed"]],[1692,54,1721,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\naHelp =\n    a\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1726,1,1934,10,[0,[[0],[1,[1726,1,1726,49,[[1726,1,1726,42,"glueDependenciesBeforeFirstDependentTests"],[1726,45,1726,49,[1,[1726,45,1726,49,[[],"Test"]],[]]]]]],[1727,1,1934,10,[[1727,1,1727,42,"glueDependenciesBeforeFirstDependentTests"],[],[1728,5,1934,10,[0,[[1728,5,1728,13,[2,[],"describe"]],[1728,14,1728,52,[5,"glueDependenciesBeforeFirstDependent"]],[1729,9,1934,10,[9,[[1729,11,1768,50,[1,"<|",1,[1729,11,1729,37,[0,[[1729,11,1729,15,[2,[],"test"]],[1729,16,1729,37,[5,"passes when ordered"]]]]],[1730,13,1768,50,[18,[[[1730,14,1730,16,[1]]],[1731,17,1768,50,[1,"|>",0,[1731,17,1767,26,[1,"|>",0,[1731,17,1760,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1761,24,1767,26,[0,[[1761,24,1761,39,[2,["Review","Test"],"run"]],[1762,25,1767,26,[7,[1762,26,1766,36,[1,"|>",0,[1762,26,1765,68,[1,"|>",0,[1762,26,1764,46,[1,"|>",0,[1762,26,1763,59,[1,"|>",0,[1762,26,1762,50,[2,[],"sortTopLevelDeclarations"]],[1763,32,1763,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1764,32,1764,46,[2,[],"alphabetically"]]]],[1765,32,1765,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1766,32,1766,36,[2,[],"rule"]]]]]]]]]]],[1768,24,1768,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1769,11,1808,50,[1,"<|",1,[1769,11,1769,44,[0,[[1769,11,1769,15,[2,[],"test"]],[1769,16,1769,44,[5,"ports are not dependencies"]]]]],[1770,13,1808,50,[18,[[[1770,14,1770,16,[1]]],[1771,17,1808,50,[1,"|>",0,[1771,17,1807,26,[1,"|>",0,[1771,17,1799,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1800,24,1807,26,[0,[[1800,24,1800,39,[2,["Review","Test"],"run"]],[1801,25,1807,26,[7,[1801,26,1806,36,[1,"|>",0,[1801,26,1805,68,[1,"|>",0,[1801,26,1804,46,[1,"|>",0,[1801,26,1803,59,[1,"|>",0,[1801,26,1802,42,[1,"|>",0,[1801,26,1801,50,[2,[],"sortTopLevelDeclarations"]],[1802,32,1802,42,[2,[],"portsFirst"]]]],[1803,32,1803,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1804,32,1804,46,[2,[],"alphabetically"]]]],[1805,32,1805,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1806,32,1806,36,[2,[],"rule"]]]]]]]]]]],[1808,24,1808,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1809,11,1848,50,[1,"<|",1,[1809,11,1809,60,[0,[[1809,11,1809,15,[2,[],"test"]],[1809,16,1809,60,[5,"is not a dependency if in exactly one func"]]]]],[1810,13,1848,50,[18,[[[1810,14,1810,16,[1]]],[1811,17,1848,50,[1,"|>",0,[1811,17,1847,26,[1,"|>",0,[1811,17,1840,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nhelp =\n    foo\n\nz =\n    zed\n"]],[1841,24,1847,26,[0,[[1841,24,1841,39,[2,["Review","Test"],"run"]],[1842,25,1847,26,[7,[1842,26,1846,36,[1,"|>",0,[1842,26,1845,68,[1,"|>",0,[1842,26,1844,46,[1,"|>",0,[1842,26,1843,59,[1,"|>",0,[1842,26,1842,50,[2,[],"sortTopLevelDeclarations"]],[1843,32,1843,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1844,32,1844,46,[2,[],"alphabetically"]]]],[1845,32,1845,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1846,32,1846,36,[2,[],"rule"]]]]]]]]]]],[1848,24,1848,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1849,11,1933,26,[1,"<|",1,[1849,11,1849,59,[0,[[1849,11,1849,15,[2,[],"test"]],[1849,16,1849,59,[5,"fails when not ordered and removes cycles"]]]]],[1850,13,1933,26,[18,[[[1850,14,1850,16,[1]]],[1851,17,1933,26,[1,"|>",0,[1851,17,1893,26,[1,"|>",0,[1851,17,1886,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\ny =\n    help\n\nz =\n    zed help y\n"]],[1887,24,1893,26,[0,[[1887,24,1887,39,[2,["Review","Test"],"run"]],[1888,25,1893,26,[7,[1888,26,1892,36,[1,"|>",0,[1888,26,1891,68,[1,"|>",0,[1888,26,1890,46,[1,"|>",0,[1888,26,1889,59,[1,"|>",0,[1888,26,1888,50,[2,[],"sortTopLevelDeclarations"]],[1889,32,1889,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1890,32,1890,46,[2,[],"alphabetically"]]]],[1891,32,1891,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1892,32,1892,36,[2,[],"rule"]]]]]]]]]]],[1894,24,1933,26,[0,[[1894,24,1894,48,[2,["Review","Test"],"expectErrors"]],[1895,25,1933,26,[9,[[1895,27,1932,4,[1,"|>",0,[1895,27,1895,46,[0,[[1895,27,1895,40,[2,[],"unsortedError"]],[1895,41,1895,46,[2,[],"False"]]]]],[1896,32,1932,4,[0,[[1896,32,1896,53,[2,["Review","Test"],"whenFixed"]],[1897,33,1932,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1937,1,2105,10,[0,[[0],[1,[1937,1,1937,48,[[1937,1,1937,41,"glueDependenciesAfterFirstDependentTests"],[1937,44,1937,48,[1,[1937,44,1937,48,[[],"Test"]],[]]]]]],[1938,1,2105,10,[[1938,1,1938,41,"glueDependenciesAfterFirstDependentTests"],[],[1939,5,2105,10,[0,[[1939,5,1939,13,[2,[],"describe"]],[1939,14,1939,51,[5,"glueDependenciesAfterFirstDependent"]],[1940,9,2105,10,[9,[[1940,11,1979,50,[1,"<|",1,[1940,11,1940,37,[0,[[1940,11,1940,15,[2,[],"test"]],[1940,16,1940,37,[5,"passes when ordered"]]]]],[1941,13,1979,50,[18,[[[1941,14,1941,16,[1]]],[1942,17,1979,50,[1,"|>",0,[1942,17,1978,26,[1,"|>",0,[1942,17,1971,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\nhelp =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1972,24,1978,26,[0,[[1972,24,1972,39,[2,["Review","Test"],"run"]],[1973,25,1978,26,[7,[1973,26,1977,36,[1,"|>",0,[1973,26,1976,67,[1,"|>",0,[1973,26,1975,46,[1,"|>",0,[1973,26,1974,59,[1,"|>",0,[1973,26,1973,50,[2,[],"sortTopLevelDeclarations"]],[1974,32,1974,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1975,32,1975,46,[2,[],"alphabetically"]]]],[1976,32,1976,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[1977,32,1977,36,[2,[],"rule"]]]]]]]]]]],[1979,24,1979,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1980,11,2019,50,[1,"<|",1,[1980,11,1980,44,[0,[[1980,11,1980,15,[2,[],"test"]],[1980,16,1980,44,[5,"ports are not dependencies"]]]]],[1981,13,2019,50,[18,[[[1981,14,1981,16,[1]]],[1982,17,2019,50,[1,"|>",0,[1982,17,2018,26,[1,"|>",0,[1982,17,2010,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[2011,24,2018,26,[0,[[2011,24,2011,39,[2,["Review","Test"],"run"]],[2012,25,2018,26,[7,[2012,26,2017,36,[1,"|>",0,[2012,26,2016,67,[1,"|>",0,[2012,26,2015,46,[1,"|>",0,[2012,26,2014,59,[1,"|>",0,[2012,26,2013,42,[1,"|>",0,[2012,26,2012,50,[2,[],"sortTopLevelDeclarations"]],[2013,32,2013,42,[2,[],"portsFirst"]]]],[2014,32,2014,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2015,32,2015,46,[2,[],"alphabetically"]]]],[2016,32,2016,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[2017,32,2017,36,[2,[],"rule"]]]]]]]]]]],[2019,24,2019,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2020,11,2104,26,[1,"<|",1,[2020,11,2020,59,[0,[[2020,11,2020,15,[2,[],"test"]],[2020,16,2020,59,[5,"fails when not ordered and removes cycles"]]]]],[2021,13,2104,26,[18,[[[2021,14,2021,16,[1]]],[2022,17,2104,26,[1,"|>",0,[2022,17,2064,26,[1,"|>",0,[2022,17,2057,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\ny =\n    help\n\nz =\n    zed help y\n"]],[2058,24,2064,26,[0,[[2058,24,2058,39,[2,["Review","Test"],"run"]],[2059,25,2064,26,[7,[2059,26,2063,36,[1,"|>",0,[2059,26,2062,67,[1,"|>",0,[2059,26,2061,46,[1,"|>",0,[2059,26,2060,59,[1,"|>",0,[2059,26,2059,50,[2,[],"sortTopLevelDeclarations"]],[2060,32,2060,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2061,32,2061,46,[2,[],"alphabetically"]]]],[2062,32,2062,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[2063,32,2063,36,[2,[],"rule"]]]]]]]]]]],[2065,24,2104,26,[0,[[2065,24,2065,48,[2,["Review","Test"],"expectErrors"]],[2066,25,2104,26,[9,[[2066,27,2103,4,[1,"|>",0,[2066,27,2066,46,[0,[[2066,27,2066,40,[2,[],"unsortedError"]],[2066,41,2066,46,[2,[],"False"]]]]],[2067,32,2103,4,[0,[[2067,32,2067,53,[2,["Review","Test"],"whenFixed"]],[2068,33,2103,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\nhelp =\n    foo x\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\nz =\n    zed help y\n\ny =\n    help\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2108,1,2276,10,[0,[[0],[1,[2108,1,2108,48,[[2108,1,2108,41,"glueDependenciesBeforeLastDependentTests"],[2108,44,2108,48,[1,[2108,44,2108,48,[[],"Test"]],[]]]]]],[2109,1,2276,10,[[2109,1,2109,41,"glueDependenciesBeforeLastDependentTests"],[],[2110,5,2276,10,[0,[[2110,5,2110,13,[2,[],"describe"]],[2110,14,2110,51,[5,"glueDependenciesBeforeLastDependent"]],[2111,9,2276,10,[9,[[2111,11,2150,50,[1,"<|",1,[2111,11,2111,37,[0,[[2111,11,2111,15,[2,[],"test"]],[2111,16,2111,37,[5,"passes when ordered"]]]]],[2112,13,2150,50,[18,[[[2112,14,2112,16,[1]]],[2113,17,2150,50,[1,"|>",0,[2113,17,2149,26,[1,"|>",0,[2113,17,2142,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nhelp =\n    foo\n\nz =\n    zed help\n"]],[2143,24,2149,26,[0,[[2143,24,2143,39,[2,["Review","Test"],"run"]],[2144,25,2149,26,[7,[2144,26,2148,36,[1,"|>",0,[2144,26,2147,67,[1,"|>",0,[2144,26,2146,46,[1,"|>",0,[2144,26,2145,59,[1,"|>",0,[2144,26,2144,50,[2,[],"sortTopLevelDeclarations"]],[2145,32,2145,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2146,32,2146,46,[2,[],"alphabetically"]]]],[2147,32,2147,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[2148,32,2148,36,[2,[],"rule"]]]]]]]]]]],[2150,24,2150,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2151,11,2190,50,[1,"<|",1,[2151,11,2151,44,[0,[[2151,11,2151,15,[2,[],"test"]],[2151,16,2151,44,[5,"ports are not dependencies"]]]]],[2152,13,2190,50,[18,[[[2152,14,2152,16,[1]]],[2153,17,2190,50,[1,"|>",0,[2153,17,2189,26,[1,"|>",0,[2153,17,2181,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[2182,24,2189,26,[0,[[2182,24,2182,39,[2,["Review","Test"],"run"]],[2183,25,2189,26,[7,[2183,26,2188,36,[1,"|>",0,[2183,26,2187,67,[1,"|>",0,[2183,26,2186,46,[1,"|>",0,[2183,26,2185,59,[1,"|>",0,[2183,26,2184,42,[1,"|>",0,[2183,26,2183,50,[2,[],"sortTopLevelDeclarations"]],[2184,32,2184,42,[2,[],"portsFirst"]]]],[2185,32,2185,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2186,32,2186,46,[2,[],"alphabetically"]]]],[2187,32,2187,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[2188,32,2188,36,[2,[],"rule"]]]]]]]]]]],[2190,24,2190,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2191,11,2275,26,[1,"<|",1,[2191,11,2191,59,[0,[[2191,11,2191,15,[2,[],"test"]],[2191,16,2191,59,[5,"fails when not ordered and removes cycles"]]]]],[2192,13,2275,26,[18,[[[2192,14,2192,16,[1]]],[2193,17,2275,26,[1,"|>",0,[2193,17,2235,26,[1,"|>",0,[2193,17,2228,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]],[2229,24,2235,26,[0,[[2229,24,2229,39,[2,["Review","Test"],"run"]],[2230,25,2235,26,[7,[2230,26,2234,36,[1,"|>",0,[2230,26,2233,67,[1,"|>",0,[2230,26,2232,46,[1,"|>",0,[2230,26,2231,59,[1,"|>",0,[2230,26,2230,50,[2,[],"sortTopLevelDeclarations"]],[2231,32,2231,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2232,32,2232,46,[2,[],"alphabetically"]]]],[2233,32,2233,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[2234,32,2234,36,[2,[],"rule"]]]]]]]]]]],[2236,24,2275,26,[0,[[2236,24,2236,48,[2,["Review","Test"],"expectErrors"]],[2237,25,2275,26,[9,[[2237,27,2274,4,[1,"|>",0,[2237,27,2237,46,[0,[[2237,27,2237,40,[2,[],"unsortedError"]],[2237,41,2237,46,[2,[],"False"]]]]],[2238,32,2274,4,[0,[[2238,32,2238,53,[2,["Review","Test"],"whenFixed"]],[2239,33,2274,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\nhelp =\n    foo x\n\ny =\n    help\n\nz =\n    zed help y\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2279,1,2447,10,[0,[[0],[1,[2279,1,2279,47,[[2279,1,2279,40,"glueDependenciesAfterLastDependentTests"],[2279,43,2279,47,[1,[2279,43,2279,47,[[],"Test"]],[]]]]]],[2280,1,2447,10,[[2280,1,2280,40,"glueDependenciesAfterLastDependentTests"],[],[2281,5,2447,10,[0,[[2281,5,2281,13,[2,[],"describe"]],[2281,14,2281,50,[5,"glueDependenciesAfterLastDependent"]],[2282,9,2447,10,[9,[[2282,11,2321,50,[1,"<|",1,[2282,11,2282,37,[0,[[2282,11,2282,15,[2,[],"test"]],[2282,16,2282,37,[5,"passes when ordered"]]]]],[2283,13,2321,50,[18,[[[2283,14,2283,16,[1]]],[2284,17,2321,50,[1,"|>",0,[2284,17,2320,26,[1,"|>",0,[2284,17,2313,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n\nhelp =\n    foo\n"]],[2314,24,2320,26,[0,[[2314,24,2314,39,[2,["Review","Test"],"run"]],[2315,25,2320,26,[7,[2315,26,2319,36,[1,"|>",0,[2315,26,2318,66,[1,"|>",0,[2315,26,2317,46,[1,"|>",0,[2315,26,2316,59,[1,"|>",0,[2315,26,2315,50,[2,[],"sortTopLevelDeclarations"]],[2316,32,2316,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2317,32,2317,46,[2,[],"alphabetically"]]]],[2318,32,2318,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[2319,32,2319,36,[2,[],"rule"]]]]]]]]]]],[2321,24,2321,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2322,11,2361,50,[1,"<|",1,[2322,11,2322,44,[0,[[2322,11,2322,15,[2,[],"test"]],[2322,16,2322,44,[5,"ports are not dependencies"]]]]],[2323,13,2361,50,[18,[[[2323,14,2323,16,[1]]],[2324,17,2361,50,[1,"|>",0,[2324,17,2360,26,[1,"|>",0,[2324,17,2352,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[2353,24,2360,26,[0,[[2353,24,2353,39,[2,["Review","Test"],"run"]],[2354,25,2360,26,[7,[2354,26,2359,36,[1,"|>",0,[2354,26,2358,66,[1,"|>",0,[2354,26,2357,46,[1,"|>",0,[2354,26,2356,59,[1,"|>",0,[2354,26,2355,42,[1,"|>",0,[2354,26,2354,50,[2,[],"sortTopLevelDeclarations"]],[2355,32,2355,42,[2,[],"portsFirst"]]]],[2356,32,2356,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2357,32,2357,46,[2,[],"alphabetically"]]]],[2358,32,2358,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[2359,32,2359,36,[2,[],"rule"]]]]]]]]]]],[2361,24,2361,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2362,11,2446,26,[1,"<|",1,[2362,11,2362,59,[0,[[2362,11,2362,15,[2,[],"test"]],[2362,16,2362,59,[5,"fails when not ordered and removes cycles"]]]]],[2363,13,2446,26,[18,[[[2363,14,2363,16,[1]]],[2364,17,2446,26,[1,"|>",0,[2364,17,2406,26,[1,"|>",0,[2364,17,2399,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]],[2400,24,2406,26,[0,[[2400,24,2400,39,[2,["Review","Test"],"run"]],[2401,25,2406,26,[7,[2401,26,2405,36,[1,"|>",0,[2401,26,2404,66,[1,"|>",0,[2401,26,2403,46,[1,"|>",0,[2401,26,2402,59,[1,"|>",0,[2401,26,2401,50,[2,[],"sortTopLevelDeclarations"]],[2402,32,2402,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2403,32,2403,46,[2,[],"alphabetically"]]]],[2404,32,2404,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[2405,32,2405,36,[2,[],"rule"]]]]]]]]]]],[2407,24,2446,26,[0,[[2407,24,2407,48,[2,["Review","Test"],"expectErrors"]],[2408,25,2446,26,[9,[[2408,27,2445,4,[1,"|>",0,[2408,27,2408,46,[0,[[2408,27,2408,40,[2,[],"unsortedError"]],[2408,41,2408,46,[2,[],"False"]]]]],[2409,32,2445,4,[0,[[2409,32,2409,53,[2,["Review","Test"],"whenFixed"]],[2410,33,2445,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\nz =\n    zed help y\n\nhelp =\n    foo x\n\ny =\n    help\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2450,1,2718,10,[0,[[0],[1,[2450,1,2450,32,[[2450,1,2450,25,"docCommentDetectionTests"],[2450,28,2450,32,[1,[2450,28,2450,32,[[],"Test"]],[]]]]]],[2451,1,2718,10,[[2451,1,2451,25,"docCommentDetectionTests"],[],[2452,5,2718,10,[0,[[2452,5,2452,13,[2,[],"describe"]],[2452,14,2452,47,[5,"correctly attaches doc comments"]],[2453,9,2718,10,[9,[[2453,11,2485,26,[1,"<|",1,[2453,11,2453,37,[0,[[2453,11,2453,15,[2,[],"test"]],[2453,16,2453,37,[5,"when before imports"]]]]],[2454,13,2485,26,[18,[[[2454,14,2454,16,[1]]],[2455,17,2485,26,[1,"|>",0,[2455,17,2470,26,[1,"|>",0,[2455,17,2465,4,[5,"port module A exposing (..)\n\n{-| before import\n-}\n\nimport Dict\n\nport z : () -> Int\n\na = 1\n"]],[2466,24,2470,26,[0,[[2466,24,2466,39,[2,["Review","Test"],"run"]],[2467,25,2470,26,[7,[2467,26,2469,36,[1,"|>",0,[2467,26,2468,46,[1,"|>",0,[2467,26,2467,50,[2,[],"sortTopLevelDeclarations"]],[2468,32,2468,46,[2,[],"alphabetically"]]]],[2469,32,2469,36,[2,[],"rule"]]]]]]]]]]],[2471,24,2485,26,[0,[[2471,24,2471,48,[2,["Review","Test"],"expectErrors"]],[2472,25,2485,26,[9,[[2472,27,2484,4,[1,"|>",0,[2472,27,2472,45,[0,[[2472,27,2472,40,[2,[],"unsortedError"]],[2472,41,2472,45,[2,[],"True"]]]]],[2473,32,2484,4,[0,[[2473,32,2473,53,[2,["Review","Test"],"whenFixed"]],[2474,33,2484,4,[5,"port module A exposing (..)\n\n{-| before import\n-}\n\nimport Dict\n\na = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2486,11,2516,26,[1,"<|",1,[2486,11,2486,36,[0,[[2486,11,2486,15,[2,[],"test"]],[2486,16,2486,36,[5,"when after imports"]]]]],[2487,13,2516,26,[18,[[[2487,14,2487,16,[1]]],[2488,17,2516,26,[1,"|>",0,[2488,17,2502,26,[1,"|>",0,[2488,17,2497,4,[5,"port module A exposing (..)\n\nimport Dict\n\n{-| after import\n-}\nport z : () -> Int\n\na = 1\n"]],[2498,24,2502,26,[0,[[2498,24,2498,39,[2,["Review","Test"],"run"]],[2499,25,2502,26,[7,[2499,26,2501,36,[1,"|>",0,[2499,26,2500,46,[1,"|>",0,[2499,26,2499,50,[2,[],"sortTopLevelDeclarations"]],[2500,32,2500,46,[2,[],"alphabetically"]]]],[2501,32,2501,36,[2,[],"rule"]]]]]]]]]]],[2503,24,2516,26,[0,[[2503,24,2503,48,[2,["Review","Test"],"expectErrors"]],[2504,25,2516,26,[9,[[2504,27,2515,4,[1,"|>",0,[2504,27,2504,45,[0,[[2504,27,2504,40,[2,[],"unsortedError"]],[2504,41,2504,45,[2,[],"True"]]]]],[2505,32,2515,4,[0,[[2505,32,2505,53,[2,["Review","Test"],"whenFixed"]],[2506,33,2515,4,[5,"port module A exposing (..)\n\nimport Dict\n\na = 1\n\n{-| after import\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2517,11,2549,26,[1,"<|",1,[2517,11,2517,43,[0,[[2517,11,2517,15,[2,[],"test"]],[2517,16,2517,43,[5,"no import, but two before"]]]]],[2518,13,2549,26,[18,[[[2518,14,2518,16,[1]]],[2519,17,2549,26,[1,"|>",0,[2519,17,2534,26,[1,"|>",0,[2519,17,2529,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\nport z : () -> Int\n\na = 1\n"]],[2530,24,2534,26,[0,[[2530,24,2530,39,[2,["Review","Test"],"run"]],[2531,25,2534,26,[7,[2531,26,2533,36,[1,"|>",0,[2531,26,2532,46,[1,"|>",0,[2531,26,2531,50,[2,[],"sortTopLevelDeclarations"]],[2532,32,2532,46,[2,[],"alphabetically"]]]],[2533,32,2533,36,[2,[],"rule"]]]]]]]]]]],[2535,24,2549,26,[0,[[2535,24,2535,48,[2,["Review","Test"],"expectErrors"]],[2536,25,2549,26,[9,[[2536,27,2548,4,[1,"|>",0,[2536,27,2536,45,[0,[[2536,27,2536,40,[2,[],"unsortedError"]],[2536,41,2536,45,[2,[],"True"]]]]],[2537,32,2548,4,[0,[[2537,32,2537,53,[2,["Review","Test"],"whenFixed"]],[2538,33,2548,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\na = 1\n\n{-| doc2\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2550,11,2586,26,[1,"<|",1,[2550,11,2550,52,[0,[[2550,11,2550,15,[2,[],"test"]],[2550,16,2550,52,[5,"no import, but parsed doc commment"]]]]],[2551,13,2586,26,[18,[[[2551,14,2551,16,[1]]],[2552,17,2586,26,[1,"|>",0,[2552,17,2569,26,[1,"|>",0,[2552,17,2564,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\na = 1\n\nport z : () -> Int\n\nb = 1\n"]],[2565,24,2569,26,[0,[[2565,24,2565,39,[2,["Review","Test"],"run"]],[2566,25,2569,26,[7,[2566,26,2568,36,[1,"|>",0,[2566,26,2567,46,[1,"|>",0,[2566,26,2566,50,[2,[],"sortTopLevelDeclarations"]],[2567,32,2567,46,[2,[],"alphabetically"]]]],[2568,32,2568,36,[2,[],"rule"]]]]]]]]]]],[2570,24,2586,26,[0,[[2570,24,2570,48,[2,["Review","Test"],"expectErrors"]],[2571,25,2586,26,[9,[[2571,27,2585,4,[1,"|>",0,[2571,27,2571,45,[0,[[2571,27,2571,40,[2,[],"unsortedError"]],[2571,41,2571,45,[2,[],"True"]]]]],[2572,32,2585,4,[0,[[2572,32,2572,53,[2,["Review","Test"],"whenFixed"]],[2573,33,2585,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\na = 1\n\nb = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2587,11,2625,26,[1,"<|",1,[2587,11,2587,49,[0,[[2587,11,2587,15,[2,[],"test"]],[2587,16,2587,49,[5,"no import, but @docs in comment"]]]]],[2588,13,2625,26,[18,[[[2588,14,2588,16,[1]]],[2589,17,2625,26,[1,"|>",0,[2589,17,2607,26,[1,"|>",0,[2589,17,2602,4,[5,"port module A exposing (..)\n\n{-|\n\n## Expose\n\n@docs a, b\n\n-}\n\nport z : () -> Int\n\na = 1\n"]],[2603,24,2607,26,[0,[[2603,24,2603,39,[2,["Review","Test"],"run"]],[2604,25,2607,26,[7,[2604,26,2606,36,[1,"|>",0,[2604,26,2605,46,[1,"|>",0,[2604,26,2604,50,[2,[],"sortTopLevelDeclarations"]],[2605,32,2605,46,[2,[],"alphabetically"]]]],[2606,32,2606,36,[2,[],"rule"]]]]]]]]]]],[2608,24,2625,26,[0,[[2608,24,2608,48,[2,["Review","Test"],"expectErrors"]],[2609,25,2625,26,[9,[[2609,27,2624,4,[1,"|>",0,[2609,27,2609,45,[0,[[2609,27,2609,40,[2,[],"unsortedError"]],[2609,41,2609,45,[2,[],"True"]]]]],[2610,32,2624,4,[0,[[2610,32,2610,53,[2,["Review","Test"],"whenFixed"]],[2611,33,2624,4,[5,"port module A exposing (..)\n\n{-|\n\n## Expose\n\n@docs a, b\n\n-}\n\na = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2626,11,2652,26,[1,"<|",1,[2626,11,2626,73,[0,[[2626,11,2626,15,[2,[],"test"]],[2626,16,2626,73,[5,"no import, no @docs in comment, so assume it's for port"]]]]],[2627,13,2652,26,[18,[[[2627,14,2627,16,[1]]],[2628,17,2652,26,[1,"|>",0,[2628,17,2640,26,[1,"|>",0,[2628,17,2635,4,[5,"port module A exposing (..)\n\n{-| nothing\n-}\nport z : () -> Int\n\na = 1\n"]],[2636,24,2640,26,[0,[[2636,24,2636,39,[2,["Review","Test"],"run"]],[2637,25,2640,26,[7,[2637,26,2639,36,[1,"|>",0,[2637,26,2638,46,[1,"|>",0,[2637,26,2637,50,[2,[],"sortTopLevelDeclarations"]],[2638,32,2638,46,[2,[],"alphabetically"]]]],[2639,32,2639,36,[2,[],"rule"]]]]]]]]]]],[2641,24,2652,26,[0,[[2641,24,2641,48,[2,["Review","Test"],"expectErrors"]],[2642,25,2652,26,[9,[[2642,27,2651,4,[1,"|>",0,[2642,27,2642,45,[0,[[2642,27,2642,40,[2,[],"unsortedError"]],[2642,41,2642,45,[2,[],"True"]]]]],[2643,32,2651,4,[0,[[2643,32,2643,53,[2,["Review","Test"],"whenFixed"]],[2644,33,2651,4,[5,"port module A exposing (..)\n\na = 1\n\n{-| nothing\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[2653,11,2717,26,[1,"<|",1,[2653,11,2653,36,[0,[[2653,11,2653,15,[2,[],"test"]],[2653,16,2653,36,[5,"multiple ports etc"]]]]],[2654,13,2717,26,[18,[[[2654,14,2654,16,[1]]],[2655,17,2717,26,[1,"|>",0,[2655,17,2686,26,[1,"|>",0,[2655,17,2681,4,[5,"port module A exposing (..)\n\n{-| module\n-}\n\n{-| z\n-}\nport z : () -> Int\n\n{-| G\n-}\ntype G = G\n\n{-| b\n-}\nb = 1\n\nport s : () -> Int\n\n{-| f\n-}\nport f : () -> Int\n\n{-| a\n-}\na = 1\n"]],[2682,24,2686,26,[0,[[2682,24,2682,39,[2,["Review","Test"],"run"]],[2683,25,2686,26,[7,[2683,26,2685,36,[1,"|>",0,[2683,26,2684,46,[1,"|>",0,[2683,26,2683,50,[2,[],"sortTopLevelDeclarations"]],[2684,32,2684,46,[2,[],"alphabetically"]]]],[2685,32,2685,36,[2,[],"rule"]]]]]]]]]]],[2687,24,2717,26,[0,[[2687,24,2687,48,[2,["Review","Test"],"expectErrors"]],[2688,25,2717,26,[9,[[2688,27,2716,4,[1,"|>",0,[2688,27,2688,45,[0,[[2688,27,2688,40,[2,[],"unsortedError"]],[2688,41,2688,45,[2,[],"True"]]]]],[2689,32,2716,4,[0,[[2689,32,2689,53,[2,["Review","Test"],"whenFixed"]],[2690,33,2716,4,[5,"port module A exposing (..)\n\n{-| module\n-}\n\n{-| a\n-}\na = 1\n\n{-| b\n-}\nb = 1\n\n{-| f\n-}\nport f : () -> Int\n\n{-| G\n-}\ntype G = G\n\nport s : () -> Int\n\n{-| z\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2721,1,2733,10,[0,[[0],[1,[2721,1,2721,50,[[2721,1,2721,14,"unsortedError"],[2721,17,2721,50,[6,[2721,17,2721,21,[1,[2721,17,2721,21,[[],"Bool"]],[]]],[2721,25,2721,50,[1,[2721,25,2721,50,[["Review","Test"],"ExpectedError"]],[]]]]]]]],[2722,1,2733,10,[[2722,1,2722,14,"unsortedError"],[[2722,15,2722,25,[11,"portModule"]]],[2723,5,2733,10,[0,[[2723,5,2723,22,[2,["Review","Test"],"error"]],[2724,9,2733,10,[8,[[2724,11,2724,61,[[2724,11,2724,18,"message"],[2724,21,2724,61,[5,"Top-level declarations are not sorted."]]]],[2725,11,2727,9,[[2725,11,2725,18,"details"],[2726,13,2726,129,[9,[[2726,15,2726,127,[5,"Top-level declarations were found out of order.  They should be sorted as specified in the rule configuration."]]]]]]],[2727,11,2733,9,[[2727,11,2727,16,"under"],[2728,13,2732,25,[11,[2728,16,2728,26,[2,[],"portModule"]],[2729,17,2729,30,[5,"port module"]],[2732,17,2732,25,[5,"module"]]]]]]]]]]]]]]]]]],[]]]
