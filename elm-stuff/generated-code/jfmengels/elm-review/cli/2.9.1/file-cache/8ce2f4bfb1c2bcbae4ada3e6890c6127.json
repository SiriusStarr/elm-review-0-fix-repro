[1,[[1,1,1,57,[0,[[1,8,1,42,["NoUnsortedTopLevelDeclarationsTest"]],[1,43,1,57,[1,[[1,53,1,56,[1,"all"]]]]]]]],[[3,1,20,10,[[3,8,3,38,["NoUnsortedTopLevelDeclarations"]],[0],[1,[4,5,20,10,[1,[[5,11,5,25,[1,"alphabetically"]],[6,11,6,39,[1,"exposedOrderWithPrivateFirst"]],[7,11,7,38,[1,"exposedOrderWithPrivateLast"]],[8,11,8,46,[1,"glueDependenciesAfterFirstDependent"]],[9,11,9,45,[1,"glueDependenciesAfterLastDependent"]],[10,11,10,47,[1,"glueDependenciesBeforeFirstDependent"]],[11,11,11,46,[1,"glueDependenciesBeforeLastDependent"]],[12,11,12,27,[1,"glueHelpersAfter"]],[13,11,13,28,[1,"glueHelpersBefore"]],[14,11,14,21,[1,"portsFirst"]],[15,11,15,20,[1,"portsLast"]],[16,11,16,15,[1,"rule"]],[17,11,17,35,[1,"sortTopLevelDeclarations"]],[18,11,18,21,[1,"typesFirst"]],[19,11,19,20,[1,"typesLast"]]]]]]]],[21,1,21,19,[[21,8,21,19,["Review","Test"]],[0],[0]]],[22,1,22,44,[[22,8,22,12,["Test"]],[0],[1,[22,13,22,44,[1,[[22,23,22,27,[2,"Test"]],[22,29,22,37,[1,"describe"]],[22,39,22,43,[1,"test"]]]]]]]]],[[25,1,32,10,[0,[[0],[1,[25,1,25,11,[[25,1,25,4,"all"],[25,7,25,11,[1,[25,7,25,11,[[],"Test"]],[]]]]]],[26,1,32,10,[[26,1,26,4,"all"],[],[27,5,32,10,[0,[[27,5,27,13,[2,[],"describe"]],[27,14,27,46,[5,"NoUnsortedTopLevelDeclarations"]],[28,9,32,10,[9,[[28,11,28,17,[2,[],"passes"]],[29,11,29,20,[2,[],"orderings"]],[30,11,30,16,[2,[],"glues"]],[31,11,31,35,[2,[],"docCommentDetectionTests"]]]]]]]]]]]]],[35,1,174,10,[0,[[0],[1,[35,1,35,27,[[35,1,35,20,"alphabeticallyTests"],[35,23,35,27,[1,[35,23,35,27,[[],"Test"]],[]]]]]],[36,1,174,10,[[36,1,36,20,"alphabeticallyTests"],[],[37,5,174,10,[0,[[37,5,37,13,[2,[],"describe"]],[37,14,37,30,[5,"alphabetically"]],[38,9,174,10,[9,[[38,11,53,50,[1,"<|",1,[38,11,38,37,[0,[[38,11,38,15,[2,[],"test"]],[38,16,38,37,[5,"passes when ordered"]]]]],[39,13,53,50,[18,[[[39,14,39,16,[1]]],[40,17,53,50,[1,"|>",0,[40,17,52,26,[1,"|>",0,[40,17,47,4,[5,"module A exposing (..)\nbar =\n    x\nbaz =\n    y\nfoo =\n    z\n"]],[48,24,52,26,[0,[[48,24,48,39,[2,["Review","Test"],"run"]],[49,25,52,26,[7,[49,26,51,36,[1,"|>",0,[49,26,50,46,[1,"|>",0,[49,26,49,50,[2,[],"sortTopLevelDeclarations"]],[50,32,50,46,[2,[],"alphabetically"]]]],[51,32,51,36,[2,[],"rule"]]]]]]]]]]],[53,24,53,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[54,11,101,26,[1,"<|",1,[54,11,54,38,[0,[[54,11,54,15,[2,[],"test"]],[54,16,54,38,[5,"fails when unordered"]]]]],[55,13,101,26,[18,[[[55,14,55,16,[1]]],[56,17,101,26,[1,"|>",0,[56,17,79,26,[1,"|>",0,[56,17,74,4,[5,"module A exposing (..)\n{-| A\n-}\n\n{-| foo\n-}\nfoo =\n    z\n\n{-| bar\n-}\nbar =\n    x\n\n{-| baz\n-}\nbaz =\n    y\n"]],[75,24,79,26,[0,[[75,24,75,39,[2,["Review","Test"],"run"]],[76,25,79,26,[7,[76,26,78,36,[1,"|>",0,[76,26,77,46,[1,"|>",0,[76,26,76,50,[2,[],"sortTopLevelDeclarations"]],[77,32,77,46,[2,[],"alphabetically"]]]],[78,32,78,36,[2,[],"rule"]]]]]]]]]]],[80,24,101,26,[0,[[80,24,80,48,[2,["Review","Test"],"expectErrors"]],[81,25,101,26,[9,[[81,27,100,4,[1,"|>",0,[81,27,81,46,[0,[[81,27,81,40,[2,[],"unsortedError"]],[81,41,81,46,[2,[],"False"]]]]],[82,32,100,4,[0,[[82,32,82,53,[2,["Review","Test"],"whenFixed"]],[82,54,100,4,[5,"module A exposing (..)\n{-| A\n-}\n\n{-| bar\n-}\nbar =\n    x\n\n{-| baz\n-}\nbaz =\n    y\n\n{-| foo\n-}\nfoo =\n    z\n"]]]]]]]]]]]]]]]]]]]],[102,11,125,50,[1,"<|",1,[102,11,102,60,[0,[[102,11,102,15,[2,[],"test"]],[102,16,102,60,[5,"passes when ordered with types and aliases"]]]]],[103,13,125,50,[18,[[[103,14,103,16,[1]]],[104,17,125,50,[1,"|>",0,[104,17,124,26,[1,"|>",0,[104,17,119,4,[5,"module A exposing (..)\ntype A\n    = A\n\na =\n    foo\n\nb =\n    bar\n\nz =\n    zed\n\ntype alias Z =\n    A\n"]],[120,24,124,26,[0,[[120,24,120,39,[2,["Review","Test"],"run"]],[121,25,124,26,[7,[121,26,123,36,[1,"|>",0,[121,26,122,46,[1,"|>",0,[121,26,121,50,[2,[],"sortTopLevelDeclarations"]],[122,32,122,46,[2,[],"alphabetically"]]]],[123,32,123,36,[2,[],"rule"]]]]]]]]]]],[125,24,125,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[126,11,173,26,[1,"<|",1,[126,11,126,61,[0,[[126,11,126,15,[2,[],"test"]],[126,16,126,61,[5,"fails when unordered with types and aliases"]]]]],[127,13,173,26,[18,[[[127,14,127,16,[1]]],[128,17,173,26,[1,"|>",0,[128,17,151,26,[1,"|>",0,[128,17,146,4,[5,"module A exposing (..)\n\n{-| This is fine in this order too.\n-}\ntype Bar = Bar\n\nbar =\n    x\n\n{-| This isn't!\n-}\ntype alias Zed = {}\n{-| foo\n-}\nfoo =\n    z\nbaz =\n    y\n"]],[147,24,151,26,[0,[[147,24,147,39,[2,["Review","Test"],"run"]],[148,25,151,26,[7,[148,26,150,36,[1,"|>",0,[148,26,149,46,[1,"|>",0,[148,26,148,50,[2,[],"sortTopLevelDeclarations"]],[149,32,149,46,[2,[],"alphabetically"]]]],[150,32,150,36,[2,[],"rule"]]]]]]]]]]],[152,24,173,26,[0,[[152,24,152,48,[2,["Review","Test"],"expectErrors"]],[153,25,173,26,[9,[[153,27,172,4,[1,"|>",0,[153,27,153,46,[0,[[153,27,153,40,[2,[],"unsortedError"]],[153,41,153,46,[2,[],"False"]]]]],[154,32,172,4,[0,[[154,32,154,53,[2,["Review","Test"],"whenFixed"]],[154,54,172,4,[5,"module A exposing (..)\n\n{-| This is fine in this order too.\n-}\ntype Bar = Bar\n\nbar =\n    x\n\nbaz =\n    y\n{-| foo\n-}\nfoo =\n    z\n{-| This isn't!\n-}\ntype alias Zed = {}\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[177,1,445,10,[0,[[0],[1,[177,1,177,32,[[177,1,177,25,"docCommentDetectionTests"],[177,28,177,32,[1,[177,28,177,32,[[],"Test"]],[]]]]]],[178,1,445,10,[[178,1,178,25,"docCommentDetectionTests"],[],[179,5,445,10,[0,[[179,5,179,13,[2,[],"describe"]],[179,14,179,47,[5,"correctly attaches doc comments"]],[180,9,445,10,[9,[[180,11,212,26,[1,"<|",1,[180,11,180,37,[0,[[180,11,180,15,[2,[],"test"]],[180,16,180,37,[5,"when before imports"]]]]],[181,13,212,26,[18,[[[181,14,181,16,[1]]],[182,17,212,26,[1,"|>",0,[182,17,197,26,[1,"|>",0,[182,17,192,4,[5,"port module A exposing (..)\n\n{-| before import\n-}\n\nimport Dict\n\nport z : () -> Int\n\na = 1\n"]],[193,24,197,26,[0,[[193,24,193,39,[2,["Review","Test"],"run"]],[194,25,197,26,[7,[194,26,196,36,[1,"|>",0,[194,26,195,46,[1,"|>",0,[194,26,194,50,[2,[],"sortTopLevelDeclarations"]],[195,32,195,46,[2,[],"alphabetically"]]]],[196,32,196,36,[2,[],"rule"]]]]]]]]]]],[198,24,212,26,[0,[[198,24,198,48,[2,["Review","Test"],"expectErrors"]],[199,25,212,26,[9,[[199,27,211,4,[1,"|>",0,[199,27,199,45,[0,[[199,27,199,40,[2,[],"unsortedError"]],[199,41,199,45,[2,[],"True"]]]]],[200,32,211,4,[0,[[200,32,200,53,[2,["Review","Test"],"whenFixed"]],[201,33,211,4,[5,"port module A exposing (..)\n\n{-| before import\n-}\n\nimport Dict\n\na = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[213,11,243,26,[1,"<|",1,[213,11,213,36,[0,[[213,11,213,15,[2,[],"test"]],[213,16,213,36,[5,"when after imports"]]]]],[214,13,243,26,[18,[[[214,14,214,16,[1]]],[215,17,243,26,[1,"|>",0,[215,17,229,26,[1,"|>",0,[215,17,224,4,[5,"port module A exposing (..)\n\nimport Dict\n\n{-| after import\n-}\nport z : () -> Int\n\na = 1\n"]],[225,24,229,26,[0,[[225,24,225,39,[2,["Review","Test"],"run"]],[226,25,229,26,[7,[226,26,228,36,[1,"|>",0,[226,26,227,46,[1,"|>",0,[226,26,226,50,[2,[],"sortTopLevelDeclarations"]],[227,32,227,46,[2,[],"alphabetically"]]]],[228,32,228,36,[2,[],"rule"]]]]]]]]]]],[230,24,243,26,[0,[[230,24,230,48,[2,["Review","Test"],"expectErrors"]],[231,25,243,26,[9,[[231,27,242,4,[1,"|>",0,[231,27,231,45,[0,[[231,27,231,40,[2,[],"unsortedError"]],[231,41,231,45,[2,[],"True"]]]]],[232,32,242,4,[0,[[232,32,232,53,[2,["Review","Test"],"whenFixed"]],[233,33,242,4,[5,"port module A exposing (..)\n\nimport Dict\n\na = 1\n\n{-| after import\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[244,11,276,26,[1,"<|",1,[244,11,244,43,[0,[[244,11,244,15,[2,[],"test"]],[244,16,244,43,[5,"no import, but two before"]]]]],[245,13,276,26,[18,[[[245,14,245,16,[1]]],[246,17,276,26,[1,"|>",0,[246,17,261,26,[1,"|>",0,[246,17,256,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\nport z : () -> Int\n\na = 1\n"]],[257,24,261,26,[0,[[257,24,257,39,[2,["Review","Test"],"run"]],[258,25,261,26,[7,[258,26,260,36,[1,"|>",0,[258,26,259,46,[1,"|>",0,[258,26,258,50,[2,[],"sortTopLevelDeclarations"]],[259,32,259,46,[2,[],"alphabetically"]]]],[260,32,260,36,[2,[],"rule"]]]]]]]]]]],[262,24,276,26,[0,[[262,24,262,48,[2,["Review","Test"],"expectErrors"]],[263,25,276,26,[9,[[263,27,275,4,[1,"|>",0,[263,27,263,45,[0,[[263,27,263,40,[2,[],"unsortedError"]],[263,41,263,45,[2,[],"True"]]]]],[264,32,275,4,[0,[[264,32,264,53,[2,["Review","Test"],"whenFixed"]],[265,33,275,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\na = 1\n\n{-| doc2\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[277,11,313,26,[1,"<|",1,[277,11,277,52,[0,[[277,11,277,15,[2,[],"test"]],[277,16,277,52,[5,"no import, but parsed doc commment"]]]]],[278,13,313,26,[18,[[[278,14,278,16,[1]]],[279,17,313,26,[1,"|>",0,[279,17,296,26,[1,"|>",0,[279,17,291,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\na = 1\n\nport z : () -> Int\n\nb = 1\n"]],[292,24,296,26,[0,[[292,24,292,39,[2,["Review","Test"],"run"]],[293,25,296,26,[7,[293,26,295,36,[1,"|>",0,[293,26,294,46,[1,"|>",0,[293,26,293,50,[2,[],"sortTopLevelDeclarations"]],[294,32,294,46,[2,[],"alphabetically"]]]],[295,32,295,36,[2,[],"rule"]]]]]]]]]]],[297,24,313,26,[0,[[297,24,297,48,[2,["Review","Test"],"expectErrors"]],[298,25,313,26,[9,[[298,27,312,4,[1,"|>",0,[298,27,298,45,[0,[[298,27,298,40,[2,[],"unsortedError"]],[298,41,298,45,[2,[],"True"]]]]],[299,32,312,4,[0,[[299,32,299,53,[2,["Review","Test"],"whenFixed"]],[300,33,312,4,[5,"port module A exposing (..)\n\n{-| doc1\n-}\n\n{-| doc2\n-}\na = 1\n\nb = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[314,11,352,26,[1,"<|",1,[314,11,314,49,[0,[[314,11,314,15,[2,[],"test"]],[314,16,314,49,[5,"no import, but @docs in comment"]]]]],[315,13,352,26,[18,[[[315,14,315,16,[1]]],[316,17,352,26,[1,"|>",0,[316,17,334,26,[1,"|>",0,[316,17,329,4,[5,"port module A exposing (..)\n\n{-|\n\n## Expose\n\n@docs a, b\n\n-}\n\nport z : () -> Int\n\na = 1\n"]],[330,24,334,26,[0,[[330,24,330,39,[2,["Review","Test"],"run"]],[331,25,334,26,[7,[331,26,333,36,[1,"|>",0,[331,26,332,46,[1,"|>",0,[331,26,331,50,[2,[],"sortTopLevelDeclarations"]],[332,32,332,46,[2,[],"alphabetically"]]]],[333,32,333,36,[2,[],"rule"]]]]]]]]]]],[335,24,352,26,[0,[[335,24,335,48,[2,["Review","Test"],"expectErrors"]],[336,25,352,26,[9,[[336,27,351,4,[1,"|>",0,[336,27,336,45,[0,[[336,27,336,40,[2,[],"unsortedError"]],[336,41,336,45,[2,[],"True"]]]]],[337,32,351,4,[0,[[337,32,337,53,[2,["Review","Test"],"whenFixed"]],[338,33,351,4,[5,"port module A exposing (..)\n\n{-|\n\n## Expose\n\n@docs a, b\n\n-}\n\na = 1\n\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[353,11,379,26,[1,"<|",1,[353,11,353,73,[0,[[353,11,353,15,[2,[],"test"]],[353,16,353,73,[5,"no import, no @docs in comment, so assume it's for port"]]]]],[354,13,379,26,[18,[[[354,14,354,16,[1]]],[355,17,379,26,[1,"|>",0,[355,17,367,26,[1,"|>",0,[355,17,362,4,[5,"port module A exposing (..)\n\n{-| nothing\n-}\nport z : () -> Int\n\na = 1\n"]],[363,24,367,26,[0,[[363,24,363,39,[2,["Review","Test"],"run"]],[364,25,367,26,[7,[364,26,366,36,[1,"|>",0,[364,26,365,46,[1,"|>",0,[364,26,364,50,[2,[],"sortTopLevelDeclarations"]],[365,32,365,46,[2,[],"alphabetically"]]]],[366,32,366,36,[2,[],"rule"]]]]]]]]]]],[368,24,379,26,[0,[[368,24,368,48,[2,["Review","Test"],"expectErrors"]],[369,25,379,26,[9,[[369,27,378,4,[1,"|>",0,[369,27,369,45,[0,[[369,27,369,40,[2,[],"unsortedError"]],[369,41,369,45,[2,[],"True"]]]]],[370,32,378,4,[0,[[370,32,370,53,[2,["Review","Test"],"whenFixed"]],[371,33,378,4,[5,"port module A exposing (..)\n\na = 1\n\n{-| nothing\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]],[380,11,444,26,[1,"<|",1,[380,11,380,36,[0,[[380,11,380,15,[2,[],"test"]],[380,16,380,36,[5,"multiple ports etc"]]]]],[381,13,444,26,[18,[[[381,14,381,16,[1]]],[382,17,444,26,[1,"|>",0,[382,17,413,26,[1,"|>",0,[382,17,408,4,[5,"port module A exposing (..)\n\n{-| module\n-}\n\n{-| z\n-}\nport z : () -> Int\n\n{-| G\n-}\ntype G = G\n\n{-| b\n-}\nb = 1\n\nport s : () -> Int\n\n{-| f\n-}\nport f : () -> Int\n\n{-| a\n-}\na = 1\n"]],[409,24,413,26,[0,[[409,24,409,39,[2,["Review","Test"],"run"]],[410,25,413,26,[7,[410,26,412,36,[1,"|>",0,[410,26,411,46,[1,"|>",0,[410,26,410,50,[2,[],"sortTopLevelDeclarations"]],[411,32,411,46,[2,[],"alphabetically"]]]],[412,32,412,36,[2,[],"rule"]]]]]]]]]]],[414,24,444,26,[0,[[414,24,414,48,[2,["Review","Test"],"expectErrors"]],[415,25,444,26,[9,[[415,27,443,4,[1,"|>",0,[415,27,415,45,[0,[[415,27,415,40,[2,[],"unsortedError"]],[415,41,415,45,[2,[],"True"]]]]],[416,32,443,4,[0,[[416,32,416,53,[2,["Review","Test"],"whenFixed"]],[417,33,443,4,[5,"port module A exposing (..)\n\n{-| module\n-}\n\n{-| a\n-}\na = 1\n\n{-| b\n-}\nb = 1\n\n{-| f\n-}\nport f : () -> Int\n\n{-| G\n-}\ntype G = G\n\nport s : () -> Int\n\n{-| z\n-}\nport z : () -> Int\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[448,1,552,10,[0,[[0],[1,[448,1,448,41,[[448,1,448,34,"exposedOrderWithPrivateFirstTests"],[448,37,448,41,[1,[448,37,448,41,[[],"Test"]],[]]]]]],[449,1,552,10,[[449,1,449,34,"exposedOrderWithPrivateFirstTests"],[],[450,5,552,10,[0,[[450,5,450,13,[2,[],"describe"]],[450,14,450,44,[5,"exposedOrderWithPrivateFirst"]],[451,9,552,10,[9,[[451,11,486,50,[1,"<|",1,[451,11,451,37,[0,[[451,11,451,15,[2,[],"test"]],[451,16,451,37,[5,"passes when ordered"]]]]],[452,13,486,50,[18,[[[452,14,452,16,[1]]],[453,17,486,50,[1,"|>",0,[453,17,485,26,[1,"|>",0,[453,17,479,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n"]],[480,24,485,26,[0,[[480,24,480,39,[2,["Review","Test"],"run"]],[481,25,485,26,[7,[481,26,484,36,[1,"|>",0,[481,26,483,46,[1,"|>",0,[481,26,482,60,[1,"|>",0,[481,26,481,50,[2,[],"sortTopLevelDeclarations"]],[482,32,482,60,[2,[],"exposedOrderWithPrivateFirst"]]]],[483,32,483,46,[2,[],"alphabetically"]]]],[484,32,484,36,[2,[],"rule"]]]]]]]]]]],[486,24,486,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[487,11,551,26,[1,"<|",1,[487,11,487,37,[0,[[487,11,487,15,[2,[],"test"]],[487,16,487,37,[5,"fails when unsorted"]]]]],[488,13,551,26,[18,[[[488,14,488,16,[1]]],[489,17,551,26,[1,"|>",0,[489,17,521,26,[1,"|>",0,[489,17,515,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[516,24,521,26,[0,[[516,24,516,39,[2,["Review","Test"],"run"]],[517,25,521,26,[7,[517,26,520,36,[1,"|>",0,[517,26,519,46,[1,"|>",0,[517,26,518,60,[1,"|>",0,[517,26,517,50,[2,[],"sortTopLevelDeclarations"]],[518,32,518,60,[2,[],"exposedOrderWithPrivateFirst"]]]],[519,32,519,46,[2,[],"alphabetically"]]]],[520,32,520,36,[2,[],"rule"]]]]]]]]]]],[522,24,551,26,[0,[[522,24,522,48,[2,["Review","Test"],"expectErrors"]],[523,25,551,26,[9,[[523,27,550,4,[1,"|>",0,[523,27,523,46,[0,[[523,27,523,40,[2,[],"unsortedError"]],[523,41,523,46,[2,[],"False"]]]]],[524,32,550,4,[0,[[524,32,524,53,[2,["Review","Test"],"whenFixed"]],[524,54,550,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[555,1,726,10,[0,[[0],[1,[555,1,555,40,[[555,1,555,33,"exposedOrderWithPrivateLastTests"],[555,36,555,40,[1,[555,36,555,40,[[],"Test"]],[]]]]]],[556,1,726,10,[[556,1,556,33,"exposedOrderWithPrivateLastTests"],[],[557,5,726,10,[0,[[557,5,557,13,[2,[],"describe"]],[557,14,557,43,[5,"exposedOrderWithPrivateLast"]],[558,9,726,10,[9,[[558,11,593,50,[1,"<|",1,[558,11,558,37,[0,[[558,11,558,15,[2,[],"test"]],[558,16,558,37,[5,"passes when ordered"]]]]],[559,13,593,50,[18,[[[559,14,559,16,[1]]],[560,17,593,50,[1,"|>",0,[560,17,592,26,[1,"|>",0,[560,17,586,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]],[587,24,592,26,[0,[[587,24,587,39,[2,["Review","Test"],"run"]],[588,25,592,26,[7,[588,26,591,36,[1,"|>",0,[588,26,590,46,[1,"|>",0,[588,26,589,59,[1,"|>",0,[588,26,588,50,[2,[],"sortTopLevelDeclarations"]],[589,32,589,59,[2,[],"exposedOrderWithPrivateLast"]]]],[590,32,590,46,[2,[],"alphabetically"]]]],[591,32,591,36,[2,[],"rule"]]]]]]]]]]],[593,24,593,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[594,11,658,26,[1,"<|",1,[594,11,594,46,[0,[[594,11,594,15,[2,[],"test"]],[594,16,594,46,[5,"falls back to second sorting"]]]]],[595,13,658,26,[18,[[[595,14,595,16,[1]]],[596,17,658,26,[1,"|>",0,[596,17,628,26,[1,"|>",0,[596,17,622,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nz =\n    zed\n\nb =\n    bar\n"]],[623,24,628,26,[0,[[623,24,623,39,[2,["Review","Test"],"run"]],[624,25,628,26,[7,[624,26,627,36,[1,"|>",0,[624,26,626,46,[1,"|>",0,[624,26,625,59,[1,"|>",0,[624,26,624,50,[2,[],"sortTopLevelDeclarations"]],[625,32,625,59,[2,[],"exposedOrderWithPrivateLast"]]]],[626,32,626,46,[2,[],"alphabetically"]]]],[627,32,627,36,[2,[],"rule"]]]]]]]]]]],[629,24,658,26,[0,[[629,24,629,48,[2,["Review","Test"],"expectErrors"]],[630,25,658,26,[9,[[630,27,657,4,[1,"|>",0,[630,27,630,46,[0,[[630,27,630,40,[2,[],"unsortedError"]],[630,41,630,46,[2,[],"False"]]]]],[631,32,657,4,[0,[[631,32,631,53,[2,["Review","Test"],"whenFixed"]],[631,54,657,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[659,11,725,26,[1,"<|",1,[659,11,659,37,[0,[[659,11,659,15,[2,[],"test"]],[659,16,659,37,[5,"fails when unsorted"]]]]],[660,13,725,26,[18,[[[660,14,660,16,[1]]],[661,17,725,26,[1,"|>",0,[661,17,694,26,[1,"|>",0,[661,17,688,4,[5,"module A exposing\n    ( a, A\n    , Z\n    )\n\n{-|\n\n@docs a, A\n@docs Z\n\n-}\n\nb =\n    bar\n\nz =\n    zed\n{-| A\n-}\ntype A\n    = A\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[689,24,694,26,[0,[[689,24,689,39,[2,["Review","Test"],"run"]],[690,25,694,26,[7,[690,26,693,36,[1,"|>",0,[690,26,692,46,[1,"|>",0,[690,26,691,59,[1,"|>",0,[690,26,690,50,[2,[],"sortTopLevelDeclarations"]],[691,32,691,59,[2,[],"exposedOrderWithPrivateLast"]]]],[692,32,692,46,[2,[],"alphabetically"]]]],[693,32,693,36,[2,[],"rule"]]]]]]]]]]],[695,24,725,26,[0,[[695,24,695,48,[2,["Review","Test"],"expectErrors"]],[696,25,725,26,[9,[[696,27,724,4,[1,"|>",0,[696,27,696,46,[0,[[696,27,696,40,[2,[],"unsortedError"]],[696,41,696,46,[2,[],"False"]]]]],[697,32,724,4,[0,[[697,32,697,53,[2,["Review","Test"],"whenFixed"]],[697,54,724,4,[5,"module A exposing\n    ( a, A\n    , Z\n    )\n\n{-|\n\n@docs a, A\n@docs Z\n\n-}\n\na =\n    foo\n\n{-| A\n-}\ntype A\n    = A\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[729,1,897,10,[0,[[0],[1,[729,1,729,48,[[729,1,729,41,"glueDependenciesAfterFirstDependentTests"],[729,44,729,48,[1,[729,44,729,48,[[],"Test"]],[]]]]]],[730,1,897,10,[[730,1,730,41,"glueDependenciesAfterFirstDependentTests"],[],[731,5,897,10,[0,[[731,5,731,13,[2,[],"describe"]],[731,14,731,51,[5,"glueDependenciesAfterFirstDependent"]],[732,9,897,10,[9,[[732,11,771,50,[1,"<|",1,[732,11,732,37,[0,[[732,11,732,15,[2,[],"test"]],[732,16,732,37,[5,"passes when ordered"]]]]],[733,13,771,50,[18,[[[733,14,733,16,[1]]],[734,17,771,50,[1,"|>",0,[734,17,770,26,[1,"|>",0,[734,17,763,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\nhelp =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[764,24,770,26,[0,[[764,24,764,39,[2,["Review","Test"],"run"]],[765,25,770,26,[7,[765,26,769,36,[1,"|>",0,[765,26,768,67,[1,"|>",0,[765,26,767,46,[1,"|>",0,[765,26,766,59,[1,"|>",0,[765,26,765,50,[2,[],"sortTopLevelDeclarations"]],[766,32,766,59,[2,[],"exposedOrderWithPrivateLast"]]]],[767,32,767,46,[2,[],"alphabetically"]]]],[768,32,768,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[769,32,769,36,[2,[],"rule"]]]]]]]]]]],[771,24,771,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[772,11,811,50,[1,"<|",1,[772,11,772,44,[0,[[772,11,772,15,[2,[],"test"]],[772,16,772,44,[5,"ports are not dependencies"]]]]],[773,13,811,50,[18,[[[773,14,773,16,[1]]],[774,17,811,50,[1,"|>",0,[774,17,810,26,[1,"|>",0,[774,17,802,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[803,24,810,26,[0,[[803,24,803,39,[2,["Review","Test"],"run"]],[804,25,810,26,[7,[804,26,809,36,[1,"|>",0,[804,26,808,67,[1,"|>",0,[804,26,807,46,[1,"|>",0,[804,26,806,59,[1,"|>",0,[804,26,805,42,[1,"|>",0,[804,26,804,50,[2,[],"sortTopLevelDeclarations"]],[805,32,805,42,[2,[],"portsFirst"]]]],[806,32,806,59,[2,[],"exposedOrderWithPrivateLast"]]]],[807,32,807,46,[2,[],"alphabetically"]]]],[808,32,808,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[809,32,809,36,[2,[],"rule"]]]]]]]]]]],[811,24,811,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[812,11,896,26,[1,"<|",1,[812,11,812,59,[0,[[812,11,812,15,[2,[],"test"]],[812,16,812,59,[5,"fails when not ordered and removes cycles"]]]]],[813,13,896,26,[18,[[[813,14,813,16,[1]]],[814,17,896,26,[1,"|>",0,[814,17,856,26,[1,"|>",0,[814,17,849,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\ny =\n    help\n\nz =\n    zed help y\n"]],[850,24,856,26,[0,[[850,24,850,39,[2,["Review","Test"],"run"]],[851,25,856,26,[7,[851,26,855,36,[1,"|>",0,[851,26,854,67,[1,"|>",0,[851,26,853,46,[1,"|>",0,[851,26,852,59,[1,"|>",0,[851,26,851,50,[2,[],"sortTopLevelDeclarations"]],[852,32,852,59,[2,[],"exposedOrderWithPrivateLast"]]]],[853,32,853,46,[2,[],"alphabetically"]]]],[854,32,854,67,[2,[],"glueDependenciesAfterFirstDependent"]]]],[855,32,855,36,[2,[],"rule"]]]]]]]]]]],[857,24,896,26,[0,[[857,24,857,48,[2,["Review","Test"],"expectErrors"]],[858,25,896,26,[9,[[858,27,895,4,[1,"|>",0,[858,27,858,46,[0,[[858,27,858,40,[2,[],"unsortedError"]],[858,41,858,46,[2,[],"False"]]]]],[859,32,895,4,[0,[[859,32,859,53,[2,["Review","Test"],"whenFixed"]],[860,33,895,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\nhelp =\n    foo x\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\nz =\n    zed help y\n\ny =\n    help\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[900,1,1068,10,[0,[[0],[1,[900,1,900,47,[[900,1,900,40,"glueDependenciesAfterLastDependentTests"],[900,43,900,47,[1,[900,43,900,47,[[],"Test"]],[]]]]]],[901,1,1068,10,[[901,1,901,40,"glueDependenciesAfterLastDependentTests"],[],[902,5,1068,10,[0,[[902,5,902,13,[2,[],"describe"]],[902,14,902,50,[5,"glueDependenciesAfterLastDependent"]],[903,9,1068,10,[9,[[903,11,942,50,[1,"<|",1,[903,11,903,37,[0,[[903,11,903,15,[2,[],"test"]],[903,16,903,37,[5,"passes when ordered"]]]]],[904,13,942,50,[18,[[[904,14,904,16,[1]]],[905,17,942,50,[1,"|>",0,[905,17,941,26,[1,"|>",0,[905,17,934,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n\nhelp =\n    foo\n"]],[935,24,941,26,[0,[[935,24,935,39,[2,["Review","Test"],"run"]],[936,25,941,26,[7,[936,26,940,36,[1,"|>",0,[936,26,939,66,[1,"|>",0,[936,26,938,46,[1,"|>",0,[936,26,937,59,[1,"|>",0,[936,26,936,50,[2,[],"sortTopLevelDeclarations"]],[937,32,937,59,[2,[],"exposedOrderWithPrivateLast"]]]],[938,32,938,46,[2,[],"alphabetically"]]]],[939,32,939,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[940,32,940,36,[2,[],"rule"]]]]]]]]]]],[942,24,942,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[943,11,982,50,[1,"<|",1,[943,11,943,44,[0,[[943,11,943,15,[2,[],"test"]],[943,16,943,44,[5,"ports are not dependencies"]]]]],[944,13,982,50,[18,[[[944,14,944,16,[1]]],[945,17,982,50,[1,"|>",0,[945,17,981,26,[1,"|>",0,[945,17,973,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[974,24,981,26,[0,[[974,24,974,39,[2,["Review","Test"],"run"]],[975,25,981,26,[7,[975,26,980,36,[1,"|>",0,[975,26,979,66,[1,"|>",0,[975,26,978,46,[1,"|>",0,[975,26,977,59,[1,"|>",0,[975,26,976,42,[1,"|>",0,[975,26,975,50,[2,[],"sortTopLevelDeclarations"]],[976,32,976,42,[2,[],"portsFirst"]]]],[977,32,977,59,[2,[],"exposedOrderWithPrivateLast"]]]],[978,32,978,46,[2,[],"alphabetically"]]]],[979,32,979,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[980,32,980,36,[2,[],"rule"]]]]]]]]]]],[982,24,982,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[983,11,1067,26,[1,"<|",1,[983,11,983,59,[0,[[983,11,983,15,[2,[],"test"]],[983,16,983,59,[5,"fails when not ordered and removes cycles"]]]]],[984,13,1067,26,[18,[[[984,14,984,16,[1]]],[985,17,1067,26,[1,"|>",0,[985,17,1027,26,[1,"|>",0,[985,17,1020,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]],[1021,24,1027,26,[0,[[1021,24,1021,39,[2,["Review","Test"],"run"]],[1022,25,1027,26,[7,[1022,26,1026,36,[1,"|>",0,[1022,26,1025,66,[1,"|>",0,[1022,26,1024,46,[1,"|>",0,[1022,26,1023,59,[1,"|>",0,[1022,26,1022,50,[2,[],"sortTopLevelDeclarations"]],[1023,32,1023,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1024,32,1024,46,[2,[],"alphabetically"]]]],[1025,32,1025,66,[2,[],"glueDependenciesAfterLastDependent"]]]],[1026,32,1026,36,[2,[],"rule"]]]]]]]]]]],[1028,24,1067,26,[0,[[1028,24,1028,48,[2,["Review","Test"],"expectErrors"]],[1029,25,1067,26,[9,[[1029,27,1066,4,[1,"|>",0,[1029,27,1029,46,[0,[[1029,27,1029,40,[2,[],"unsortedError"]],[1029,41,1029,46,[2,[],"False"]]]]],[1030,32,1066,4,[0,[[1030,32,1030,53,[2,["Review","Test"],"whenFixed"]],[1031,33,1066,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\nz =\n    zed help y\n\nhelp =\n    foo x\n\ny =\n    help\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1071,1,1279,10,[0,[[0],[1,[1071,1,1071,49,[[1071,1,1071,42,"glueDependenciesBeforeFirstDependentTests"],[1071,45,1071,49,[1,[1071,45,1071,49,[[],"Test"]],[]]]]]],[1072,1,1279,10,[[1072,1,1072,42,"glueDependenciesBeforeFirstDependentTests"],[],[1073,5,1279,10,[0,[[1073,5,1073,13,[2,[],"describe"]],[1073,14,1073,52,[5,"glueDependenciesBeforeFirstDependent"]],[1074,9,1279,10,[9,[[1074,11,1113,50,[1,"<|",1,[1074,11,1074,37,[0,[[1074,11,1074,15,[2,[],"test"]],[1074,16,1074,37,[5,"passes when ordered"]]]]],[1075,13,1113,50,[18,[[[1075,14,1075,16,[1]]],[1076,17,1113,50,[1,"|>",0,[1076,17,1112,26,[1,"|>",0,[1076,17,1105,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1106,24,1112,26,[0,[[1106,24,1106,39,[2,["Review","Test"],"run"]],[1107,25,1112,26,[7,[1107,26,1111,36,[1,"|>",0,[1107,26,1110,68,[1,"|>",0,[1107,26,1109,46,[1,"|>",0,[1107,26,1108,59,[1,"|>",0,[1107,26,1107,50,[2,[],"sortTopLevelDeclarations"]],[1108,32,1108,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1109,32,1109,46,[2,[],"alphabetically"]]]],[1110,32,1110,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1111,32,1111,36,[2,[],"rule"]]]]]]]]]]],[1113,24,1113,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1114,11,1153,50,[1,"<|",1,[1114,11,1114,44,[0,[[1114,11,1114,15,[2,[],"test"]],[1114,16,1114,44,[5,"ports are not dependencies"]]]]],[1115,13,1153,50,[18,[[[1115,14,1115,16,[1]]],[1116,17,1153,50,[1,"|>",0,[1116,17,1152,26,[1,"|>",0,[1116,17,1144,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1145,24,1152,26,[0,[[1145,24,1145,39,[2,["Review","Test"],"run"]],[1146,25,1152,26,[7,[1146,26,1151,36,[1,"|>",0,[1146,26,1150,68,[1,"|>",0,[1146,26,1149,46,[1,"|>",0,[1146,26,1148,59,[1,"|>",0,[1146,26,1147,42,[1,"|>",0,[1146,26,1146,50,[2,[],"sortTopLevelDeclarations"]],[1147,32,1147,42,[2,[],"portsFirst"]]]],[1148,32,1148,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1149,32,1149,46,[2,[],"alphabetically"]]]],[1150,32,1150,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1151,32,1151,36,[2,[],"rule"]]]]]]]]]]],[1153,24,1153,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1154,11,1193,50,[1,"<|",1,[1154,11,1154,60,[0,[[1154,11,1154,15,[2,[],"test"]],[1154,16,1154,60,[5,"is not a dependency if in exactly one func"]]]]],[1155,13,1193,50,[18,[[[1155,14,1155,16,[1]]],[1156,17,1193,50,[1,"|>",0,[1156,17,1192,26,[1,"|>",0,[1156,17,1185,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nhelp =\n    foo\n\nz =\n    zed\n"]],[1186,24,1192,26,[0,[[1186,24,1186,39,[2,["Review","Test"],"run"]],[1187,25,1192,26,[7,[1187,26,1191,36,[1,"|>",0,[1187,26,1190,68,[1,"|>",0,[1187,26,1189,46,[1,"|>",0,[1187,26,1188,59,[1,"|>",0,[1187,26,1187,50,[2,[],"sortTopLevelDeclarations"]],[1188,32,1188,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1189,32,1189,46,[2,[],"alphabetically"]]]],[1190,32,1190,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1191,32,1191,36,[2,[],"rule"]]]]]]]]]]],[1193,24,1193,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1194,11,1278,26,[1,"<|",1,[1194,11,1194,59,[0,[[1194,11,1194,15,[2,[],"test"]],[1194,16,1194,59,[5,"fails when not ordered and removes cycles"]]]]],[1195,13,1278,26,[18,[[[1195,14,1195,16,[1]]],[1196,17,1278,26,[1,"|>",0,[1196,17,1238,26,[1,"|>",0,[1196,17,1231,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help x\n\nx =\n    y\n\ny =\n    help\n\nz =\n    zed help y\n"]],[1232,24,1238,26,[0,[[1232,24,1232,39,[2,["Review","Test"],"run"]],[1233,25,1238,26,[7,[1233,26,1237,36,[1,"|>",0,[1233,26,1236,68,[1,"|>",0,[1233,26,1235,46,[1,"|>",0,[1233,26,1234,59,[1,"|>",0,[1233,26,1233,50,[2,[],"sortTopLevelDeclarations"]],[1234,32,1234,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1235,32,1235,46,[2,[],"alphabetically"]]]],[1236,32,1236,68,[2,[],"glueDependenciesBeforeFirstDependent"]]]],[1237,32,1237,36,[2,[],"rule"]]]]]]]]]]],[1239,24,1278,26,[0,[[1239,24,1239,48,[2,["Review","Test"],"expectErrors"]],[1240,25,1278,26,[9,[[1240,27,1277,4,[1,"|>",0,[1240,27,1240,46,[0,[[1240,27,1240,40,[2,[],"unsortedError"]],[1240,41,1240,46,[2,[],"False"]]]]],[1241,32,1277,4,[0,[[1241,32,1241,53,[2,["Review","Test"],"whenFixed"]],[1242,33,1277,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1282,1,1450,10,[0,[[0],[1,[1282,1,1282,48,[[1282,1,1282,41,"glueDependenciesBeforeLastDependentTests"],[1282,44,1282,48,[1,[1282,44,1282,48,[[],"Test"]],[]]]]]],[1283,1,1450,10,[[1283,1,1283,41,"glueDependenciesBeforeLastDependentTests"],[],[1284,5,1450,10,[0,[[1284,5,1284,13,[2,[],"describe"]],[1284,14,1284,51,[5,"glueDependenciesBeforeLastDependent"]],[1285,9,1450,10,[9,[[1285,11,1324,50,[1,"<|",1,[1285,11,1285,37,[0,[[1285,11,1285,15,[2,[],"test"]],[1285,16,1285,37,[5,"passes when ordered"]]]]],[1286,13,1324,50,[18,[[[1286,14,1286,16,[1]]],[1287,17,1324,50,[1,"|>",0,[1287,17,1323,26,[1,"|>",0,[1287,17,1316,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nhelp =\n    foo\n\nz =\n    zed help\n"]],[1317,24,1323,26,[0,[[1317,24,1317,39,[2,["Review","Test"],"run"]],[1318,25,1323,26,[7,[1318,26,1322,36,[1,"|>",0,[1318,26,1321,67,[1,"|>",0,[1318,26,1320,46,[1,"|>",0,[1318,26,1319,59,[1,"|>",0,[1318,26,1318,50,[2,[],"sortTopLevelDeclarations"]],[1319,32,1319,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1320,32,1320,46,[2,[],"alphabetically"]]]],[1321,32,1321,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[1322,32,1322,36,[2,[],"rule"]]]]]]]]]]],[1324,24,1324,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1325,11,1364,50,[1,"<|",1,[1325,11,1325,44,[0,[[1325,11,1325,15,[2,[],"test"]],[1325,16,1325,44,[5,"ports are not dependencies"]]]]],[1326,13,1364,50,[18,[[[1326,14,1326,16,[1]]],[1327,17,1364,50,[1,"|>",0,[1327,17,1363,26,[1,"|>",0,[1327,17,1355,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport help : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nb =\n    bar help\n\nz =\n    zed help\n"]],[1356,24,1363,26,[0,[[1356,24,1356,39,[2,["Review","Test"],"run"]],[1357,25,1363,26,[7,[1357,26,1362,36,[1,"|>",0,[1357,26,1361,67,[1,"|>",0,[1357,26,1360,46,[1,"|>",0,[1357,26,1359,59,[1,"|>",0,[1357,26,1358,42,[1,"|>",0,[1357,26,1357,50,[2,[],"sortTopLevelDeclarations"]],[1358,32,1358,42,[2,[],"portsFirst"]]]],[1359,32,1359,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1360,32,1360,46,[2,[],"alphabetically"]]]],[1361,32,1361,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[1362,32,1362,36,[2,[],"rule"]]]]]]]]]]],[1364,24,1364,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1365,11,1449,26,[1,"<|",1,[1365,11,1365,59,[0,[[1365,11,1365,15,[2,[],"test"]],[1365,16,1365,59,[5,"fails when not ordered and removes cycles"]]]]],[1366,13,1449,26,[18,[[[1366,14,1366,16,[1]]],[1367,17,1449,26,[1,"|>",0,[1367,17,1409,26,[1,"|>",0,[1367,17,1402,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\nhelp =\n    foo x\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\ny =\n    help\n\nz =\n    zed help y\n"]],[1403,24,1409,26,[0,[[1403,24,1403,39,[2,["Review","Test"],"run"]],[1404,25,1409,26,[7,[1404,26,1408,36,[1,"|>",0,[1404,26,1407,67,[1,"|>",0,[1404,26,1406,46,[1,"|>",0,[1404,26,1405,59,[1,"|>",0,[1404,26,1404,50,[2,[],"sortTopLevelDeclarations"]],[1405,32,1405,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1406,32,1406,46,[2,[],"alphabetically"]]]],[1407,32,1407,67,[2,[],"glueDependenciesBeforeLastDependent"]]]],[1408,32,1408,36,[2,[],"rule"]]]]]]]]]]],[1410,24,1449,26,[0,[[1410,24,1410,48,[2,["Review","Test"],"expectErrors"]],[1411,25,1449,26,[9,[[1411,27,1448,4,[1,"|>",0,[1411,27,1411,46,[0,[[1411,27,1411,40,[2,[],"unsortedError"]],[1411,41,1411,46,[2,[],"False"]]]]],[1412,32,1448,4,[0,[[1412,32,1412,53,[2,["Review","Test"],"whenFixed"]],[1413,33,1448,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo help\n\ntype alias Z =\n    A\n\nx =\n    y\n\nb =\n    bar help x\n\nhelp =\n    foo x\n\ny =\n    help\n\nz =\n    zed help y\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1453,1,1782,10,[0,[[0],[1,[1453,1,1453,29,[[1453,1,1453,22,"glueHelpersAfterTests"],[1453,25,1453,29,[1,[1453,25,1453,29,[[],"Test"]],[]]]]]],[1454,1,1782,10,[[1454,1,1454,22,"glueHelpersAfterTests"],[],[1455,5,1782,10,[0,[[1455,5,1455,13,[2,[],"describe"]],[1455,14,1455,32,[5,"glueHelpersAfter"]],[1456,9,1782,10,[9,[[1456,11,1495,50,[1,"<|",1,[1456,11,1456,37,[0,[[1456,11,1456,15,[2,[],"test"]],[1456,16,1456,37,[5,"passes when ordered"]]]]],[1457,13,1495,50,[18,[[[1457,14,1457,16,[1]]],[1458,17,1495,50,[1,"|>",0,[1458,17,1494,26,[1,"|>",0,[1458,17,1487,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    foo\n\nz =\n    zed\n"]],[1488,24,1494,26,[0,[[1488,24,1488,39,[2,["Review","Test"],"run"]],[1489,25,1494,26,[7,[1489,26,1493,36,[1,"|>",0,[1489,26,1492,48,[1,"|>",0,[1489,26,1491,46,[1,"|>",0,[1489,26,1490,59,[1,"|>",0,[1489,26,1489,50,[2,[],"sortTopLevelDeclarations"]],[1490,32,1490,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1491,32,1491,46,[2,[],"alphabetically"]]]],[1492,32,1492,48,[2,[],"glueHelpersAfter"]]]],[1493,32,1493,36,[2,[],"rule"]]]]]]]]]]],[1495,24,1495,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1496,11,1535,50,[1,"<|",1,[1496,11,1496,39,[0,[[1496,11,1496,15,[2,[],"test"]],[1496,16,1496,39,[5,"ports are not helpers"]]]]],[1497,13,1535,50,[18,[[[1497,14,1497,16,[1]]],[1498,17,1535,50,[1,"|>",0,[1498,17,1534,26,[1,"|>",0,[1498,17,1526,4,[5,"port module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport calledInB : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1527,24,1534,26,[0,[[1527,24,1527,39,[2,["Review","Test"],"run"]],[1528,25,1534,26,[7,[1528,26,1533,36,[1,"|>",0,[1528,26,1532,48,[1,"|>",0,[1528,26,1531,46,[1,"|>",0,[1528,26,1530,59,[1,"|>",0,[1528,26,1529,42,[1,"|>",0,[1528,26,1528,50,[2,[],"sortTopLevelDeclarations"]],[1529,32,1529,42,[2,[],"portsFirst"]]]],[1530,32,1530,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1531,32,1531,46,[2,[],"alphabetically"]]]],[1532,32,1532,48,[2,[],"glueHelpersAfter"]]]],[1533,32,1533,36,[2,[],"rule"]]]]]]]]]]],[1535,24,1535,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1536,11,1613,26,[1,"<|",1,[1536,11,1536,40,[0,[[1536,11,1536,15,[2,[],"test"]],[1536,16,1536,40,[5,"fails when not ordered"]]]]],[1537,13,1613,26,[18,[[[1537,14,1537,16,[1]]],[1538,17,1613,26,[1,"|>",0,[1538,17,1577,26,[1,"|>",0,[1538,17,1570,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n\ndalledInB =\n    foo\n\ncalledInB =\n    foo\n"]],[1571,24,1577,26,[0,[[1571,24,1571,39,[2,["Review","Test"],"run"]],[1572,25,1577,26,[7,[1572,26,1576,36,[1,"|>",0,[1572,26,1575,48,[1,"|>",0,[1572,26,1574,46,[1,"|>",0,[1572,26,1573,59,[1,"|>",0,[1572,26,1572,50,[2,[],"sortTopLevelDeclarations"]],[1573,32,1573,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1574,32,1574,46,[2,[],"alphabetically"]]]],[1575,32,1575,48,[2,[],"glueHelpersAfter"]]]],[1576,32,1576,36,[2,[],"rule"]]]]]]]]]]],[1578,24,1613,26,[0,[[1578,24,1578,48,[2,["Review","Test"],"expectErrors"]],[1579,25,1613,26,[9,[[1579,27,1612,4,[1,"|>",0,[1579,27,1579,46,[0,[[1579,27,1579,40,[2,[],"unsortedError"]],[1579,41,1579,46,[2,[],"False"]]]]],[1580,32,1612,4,[0,[[1580,32,1580,53,[2,["Review","Test"],"whenFixed"]],[1580,54,1612,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\ncalledInB =\n    foo\n\ndalledInB =\n    foo\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1614,11,1709,26,[1,"<|",1,[1614,11,1614,65,[0,[[1614,11,1614,15,[2,[],"test"]],[1614,16,1614,65,[5,"chains properly and ignores mutual dependencies"]]]]],[1615,13,1709,26,[18,[[[1615,14,1615,16,[1]]],[1616,17,1709,26,[1,"|>",0,[1616,17,1664,26,[1,"|>",0,[1616,17,1657,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nmutualDep3 =\n    mutualDep1\n\nb =\n    bar calledInB\n\nmutualDep2 =\n    bar mutualDep3\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nz =\n    zed\n\ncalledInB =\n    calledInBHelp foo\n"]],[1658,24,1664,26,[0,[[1658,24,1658,39,[2,["Review","Test"],"run"]],[1659,25,1664,26,[7,[1659,26,1663,36,[1,"|>",0,[1659,26,1662,48,[1,"|>",0,[1659,26,1661,46,[1,"|>",0,[1659,26,1660,59,[1,"|>",0,[1659,26,1659,50,[2,[],"sortTopLevelDeclarations"]],[1660,32,1660,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1661,32,1661,46,[2,[],"alphabetically"]]]],[1662,32,1662,48,[2,[],"glueHelpersAfter"]]]],[1663,32,1663,36,[2,[],"rule"]]]]]]]]]]],[1665,24,1709,26,[0,[[1665,24,1665,48,[2,["Review","Test"],"expectErrors"]],[1666,25,1709,26,[9,[[1666,27,1708,4,[1,"|>",0,[1666,27,1666,46,[0,[[1666,27,1666,40,[2,[],"unsortedError"]],[1666,41,1666,46,[2,[],"False"]]]]],[1667,32,1708,4,[0,[[1667,32,1667,53,[2,["Review","Test"],"whenFixed"]],[1667,54,1708,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    calledInBHelp foo\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nmutualDep2 =\n    bar mutualDep3\n\nmutualDep3 =\n    mutualDep1\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[1710,11,1781,26,[1,"<|",1,[1710,11,1710,76,[0,[[1710,11,1710,15,[2,[],"test"]],[1710,16,1710,76,[5,"handles mutual recursion when one is not viable for gluing"]]]]],[1711,13,1781,26,[18,[[[1711,14,1711,16,[1]]],[1712,17,1781,26,[1,"|>",0,[1712,17,1748,26,[1,"|>",0,[1712,17,1741,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\ntype alias Z =\n    A\n\naHelp =\n    a\n\nb =\n    bar\n\nz =\n    zed\n"]],[1742,24,1748,26,[0,[[1742,24,1742,39,[2,["Review","Test"],"run"]],[1743,25,1748,26,[7,[1743,26,1747,36,[1,"|>",0,[1743,26,1746,48,[1,"|>",0,[1743,26,1745,46,[1,"|>",0,[1743,26,1744,59,[1,"|>",0,[1743,26,1743,50,[2,[],"sortTopLevelDeclarations"]],[1744,32,1744,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1745,32,1745,46,[2,[],"alphabetically"]]]],[1746,32,1746,48,[2,[],"glueHelpersAfter"]]]],[1747,32,1747,36,[2,[],"rule"]]]]]]]]]]],[1749,24,1781,26,[0,[[1749,24,1749,48,[2,["Review","Test"],"expectErrors"]],[1750,25,1781,26,[9,[[1750,27,1780,4,[1,"|>",0,[1750,27,1750,46,[0,[[1750,27,1750,40,[2,[],"unsortedError"]],[1750,41,1750,46,[2,[],"False"]]]]],[1751,32,1780,4,[0,[[1751,32,1751,53,[2,["Review","Test"],"whenFixed"]],[1751,54,1780,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\naHelp =\n    a\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[1785,1,2194,10,[0,[[0],[1,[1785,1,1785,30,[[1785,1,1785,23,"glueHelpersBeforeTests"],[1785,26,1785,30,[1,[1785,26,1785,30,[[],"Test"]],[]]]]]],[1786,1,2194,10,[[1786,1,1786,23,"glueHelpersBeforeTests"],[],[1787,5,2194,10,[0,[[1787,5,1787,13,[2,[],"describe"]],[1787,14,1787,33,[5,"glueHelpersBefore"]],[1788,9,2194,10,[9,[[1788,11,1827,50,[1,"<|",1,[1788,11,1788,37,[0,[[1788,11,1788,15,[2,[],"test"]],[1788,16,1788,37,[5,"passes when ordered"]]]]],[1789,13,1827,50,[18,[[[1789,14,1789,16,[1]]],[1790,17,1827,50,[1,"|>",0,[1790,17,1826,26,[1,"|>",0,[1790,17,1819,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    foo\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1820,24,1826,26,[0,[[1820,24,1820,39,[2,["Review","Test"],"run"]],[1821,25,1826,26,[7,[1821,26,1825,36,[1,"|>",0,[1821,26,1824,49,[1,"|>",0,[1821,26,1823,46,[1,"|>",0,[1821,26,1822,59,[1,"|>",0,[1821,26,1821,50,[2,[],"sortTopLevelDeclarations"]],[1822,32,1822,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1823,32,1823,46,[2,[],"alphabetically"]]]],[1824,32,1824,49,[2,[],"glueHelpersBefore"]]]],[1825,32,1825,36,[2,[],"rule"]]]]]]]]]]],[1827,24,1827,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1828,11,1867,50,[1,"<|",1,[1828,11,1828,39,[0,[[1828,11,1828,15,[2,[],"test"]],[1828,16,1828,39,[5,"ports are not helpers"]]]]],[1829,13,1867,50,[18,[[[1829,14,1829,16,[1]]],[1830,17,1867,50,[1,"|>",0,[1830,17,1866,26,[1,"|>",0,[1830,17,1858,4,[5,"port module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\nport calledInB : String -> Cmd msg\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\nz =\n    zed\n"]],[1859,24,1866,26,[0,[[1859,24,1859,39,[2,["Review","Test"],"run"]],[1860,25,1866,26,[7,[1860,26,1865,36,[1,"|>",0,[1860,26,1864,49,[1,"|>",0,[1860,26,1863,46,[1,"|>",0,[1860,26,1862,59,[1,"|>",0,[1860,26,1861,42,[1,"|>",0,[1860,26,1860,50,[2,[],"sortTopLevelDeclarations"]],[1861,32,1861,42,[2,[],"portsFirst"]]]],[1862,32,1862,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1863,32,1863,46,[2,[],"alphabetically"]]]],[1864,32,1864,49,[2,[],"glueHelpersBefore"]]]],[1865,32,1865,36,[2,[],"rule"]]]]]]]]]]],[1867,24,1867,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1868,11,1907,50,[1,"<|",1,[1868,11,1868,57,[0,[[1868,11,1868,15,[2,[],"test"]],[1868,16,1868,57,[5,"is not helper if used in multiple funcs"]]]]],[1869,13,1907,50,[18,[[[1869,14,1869,16,[1]]],[1870,17,1907,50,[1,"|>",0,[1870,17,1906,26,[1,"|>",0,[1870,17,1899,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo calledInB\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB\n\ncalledInB =\n    foo\n\nz =\n    zed\n"]],[1900,24,1906,26,[0,[[1900,24,1900,39,[2,["Review","Test"],"run"]],[1901,25,1906,26,[7,[1901,26,1905,36,[1,"|>",0,[1901,26,1904,49,[1,"|>",0,[1901,26,1903,46,[1,"|>",0,[1901,26,1902,59,[1,"|>",0,[1901,26,1901,50,[2,[],"sortTopLevelDeclarations"]],[1902,32,1902,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1903,32,1903,46,[2,[],"alphabetically"]]]],[1904,32,1904,49,[2,[],"glueHelpersBefore"]]]],[1905,32,1905,36,[2,[],"rule"]]]]]]]]]]],[1907,24,1907,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1908,11,1947,50,[1,"<|",1,[1908,11,1908,39,[0,[[1908,11,1908,15,[2,[],"test"]],[1908,16,1908,39,[5,"does not glue to self"]]]]],[1909,13,1947,50,[18,[[[1909,14,1909,16,[1]]],[1910,17,1947,50,[1,"|>",0,[1910,17,1946,26,[1,"|>",0,[1910,17,1939,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    calledInB\n\nb =\n    bar calledInB\n\nz =\n    z\n"]],[1940,24,1946,26,[0,[[1940,24,1940,39,[2,["Review","Test"],"run"]],[1941,25,1946,26,[7,[1941,26,1945,36,[1,"|>",0,[1941,26,1944,49,[1,"|>",0,[1941,26,1943,46,[1,"|>",0,[1941,26,1942,59,[1,"|>",0,[1941,26,1941,50,[2,[],"sortTopLevelDeclarations"]],[1942,32,1942,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1943,32,1943,46,[2,[],"alphabetically"]]]],[1944,32,1944,49,[2,[],"glueHelpersBefore"]]]],[1945,32,1945,36,[2,[],"rule"]]]]]]]]]]],[1947,24,1947,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[1948,11,2025,26,[1,"<|",1,[1948,11,1948,40,[0,[[1948,11,1948,15,[2,[],"test"]],[1948,16,1948,40,[5,"fails when not ordered"]]]]],[1949,13,2025,26,[18,[[[1949,14,1949,16,[1]]],[1950,17,2025,26,[1,"|>",0,[1950,17,1989,26,[1,"|>",0,[1950,17,1982,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n\ndalledInB =\n    foo\n\ncalledInB =\n    foo\n"]],[1983,24,1989,26,[0,[[1983,24,1983,39,[2,["Review","Test"],"run"]],[1984,25,1989,26,[7,[1984,26,1988,36,[1,"|>",0,[1984,26,1987,49,[1,"|>",0,[1984,26,1986,46,[1,"|>",0,[1984,26,1985,59,[1,"|>",0,[1984,26,1984,50,[2,[],"sortTopLevelDeclarations"]],[1985,32,1985,59,[2,[],"exposedOrderWithPrivateLast"]]]],[1986,32,1986,46,[2,[],"alphabetically"]]]],[1987,32,1987,49,[2,[],"glueHelpersBefore"]]]],[1988,32,1988,36,[2,[],"rule"]]]]]]]]]]],[1990,24,2025,26,[0,[[1990,24,1990,48,[2,["Review","Test"],"expectErrors"]],[1991,25,2025,26,[9,[[1991,27,2024,4,[1,"|>",0,[1991,27,1991,46,[0,[[1991,27,1991,40,[2,[],"unsortedError"]],[1991,41,1991,46,[2,[],"False"]]]]],[1992,32,2024,4,[0,[[1992,32,1992,53,[2,["Review","Test"],"whenFixed"]],[1992,54,2024,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInB =\n    foo\n\ndalledInB =\n    foo\n\nb =\n    bar calledInB dalledInB\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[2026,11,2121,26,[1,"<|",1,[2026,11,2026,65,[0,[[2026,11,2026,15,[2,[],"test"]],[2026,16,2026,65,[5,"chains properly and ignores mutual dependencies"]]]]],[2027,13,2121,26,[18,[[[2027,14,2027,16,[1]]],[2028,17,2121,26,[1,"|>",0,[2028,17,2076,26,[1,"|>",0,[2028,17,2069,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\nmutualDep3 =\n    mutualDep1\n\nb =\n    bar calledInB\n\nmutualDep2 =\n    bar mutualDep3\n\ncalledInBHelp =\n    bar\n\nmutualDep1 =\n    mutualDep2\n\nz =\n    zed\n\ncalledInB =\n    calledInBHelp foo\n"]],[2070,24,2076,26,[0,[[2070,24,2070,39,[2,["Review","Test"],"run"]],[2071,25,2076,26,[7,[2071,26,2075,36,[1,"|>",0,[2071,26,2074,49,[1,"|>",0,[2071,26,2073,46,[1,"|>",0,[2071,26,2072,59,[1,"|>",0,[2071,26,2071,50,[2,[],"sortTopLevelDeclarations"]],[2072,32,2072,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2073,32,2073,46,[2,[],"alphabetically"]]]],[2074,32,2074,49,[2,[],"glueHelpersBefore"]]]],[2075,32,2075,36,[2,[],"rule"]]]]]]]]]]],[2077,24,2121,26,[0,[[2077,24,2077,48,[2,["Review","Test"],"expectErrors"]],[2078,25,2121,26,[9,[[2078,27,2120,4,[1,"|>",0,[2078,27,2078,46,[0,[[2078,27,2078,40,[2,[],"unsortedError"]],[2078,41,2078,46,[2,[],"False"]]]]],[2079,32,2120,4,[0,[[2079,32,2079,53,[2,["Review","Test"],"whenFixed"]],[2079,54,2120,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    foo\n\ntype alias Z =\n    A\n\ncalledInBHelp =\n    bar\n\ncalledInB =\n    calledInBHelp foo\n\nb =\n    bar calledInB\n\nmutualDep1 =\n    mutualDep2\n\nmutualDep2 =\n    bar mutualDep3\n\nmutualDep3 =\n    mutualDep1\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]],[2122,11,2193,26,[1,"<|",1,[2122,11,2122,76,[0,[[2122,11,2122,15,[2,[],"test"]],[2122,16,2122,76,[5,"handles mutual recursion when one is not viable for gluing"]]]]],[2123,13,2193,26,[18,[[[2123,14,2123,16,[1]]],[2124,17,2193,26,[1,"|>",0,[2124,17,2160,26,[1,"|>",0,[2124,17,2153,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\na =\n    aHelp\n\naHelp =\n    a\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]],[2154,24,2160,26,[0,[[2154,24,2154,39,[2,["Review","Test"],"run"]],[2155,25,2160,26,[7,[2155,26,2159,36,[1,"|>",0,[2155,26,2158,49,[1,"|>",0,[2155,26,2157,46,[1,"|>",0,[2155,26,2156,59,[1,"|>",0,[2155,26,2155,50,[2,[],"sortTopLevelDeclarations"]],[2156,32,2156,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2157,32,2157,46,[2,[],"alphabetically"]]]],[2158,32,2158,49,[2,[],"glueHelpersBefore"]]]],[2159,32,2159,36,[2,[],"rule"]]]]]]]]]]],[2161,24,2193,26,[0,[[2161,24,2161,48,[2,["Review","Test"],"expectErrors"]],[2162,25,2193,26,[9,[[2162,27,2192,4,[1,"|>",0,[2162,27,2162,46,[0,[[2162,27,2162,40,[2,[],"unsortedError"]],[2162,41,2162,46,[2,[],"False"]]]]],[2163,32,2192,4,[0,[[2163,32,2163,53,[2,["Review","Test"],"whenFixed"]],[2163,54,2192,4,[5,"module A exposing\n    ( A, a\n    , Z\n    )\n\n{-|\n\n@docs A, a\n@docs Z\n\n-}\n\ntype A\n    = A\n\naHelp =\n    a\n\na =\n    aHelp\n\ntype alias Z =\n    A\n\nb =\n    bar\n\nz =\n    zed\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2197,1,2206,10,[0,[[0],[1,[2197,1,2197,13,[[2197,1,2197,6,"glues"],[2197,9,2197,13,[1,[2197,9,2197,13,[[],"Test"]],[]]]]]],[2198,1,2206,10,[[2198,1,2198,6,"glues"],[],[2199,5,2206,10,[0,[[2199,5,2199,13,[2,[],"describe"]],[2199,14,2199,21,[5,"glues"]],[2200,9,2206,10,[9,[[2200,11,2200,33,[2,[],"glueHelpersBeforeTests"]],[2201,11,2201,32,[2,[],"glueHelpersAfterTests"]],[2202,11,2202,52,[2,[],"glueDependenciesBeforeFirstDependentTests"]],[2203,11,2203,51,[2,[],"glueDependenciesAfterFirstDependentTests"]],[2204,11,2204,51,[2,[],"glueDependenciesBeforeLastDependentTests"]],[2205,11,2205,50,[2,[],"glueDependenciesAfterLastDependentTests"]]]]]]]]]]]]],[2209,1,2219,10,[0,[[0],[1,[2209,1,2209,17,[[2209,1,2209,10,"orderings"],[2209,13,2209,17,[1,[2209,13,2209,17,[[],"Test"]],[]]]]]],[2210,1,2219,10,[[2210,1,2210,10,"orderings"],[],[2211,5,2219,10,[0,[[2211,5,2211,13,[2,[],"describe"]],[2211,14,2211,25,[5,"orderings"]],[2212,9,2219,10,[9,[[2212,11,2212,30,[2,[],"alphabeticallyTests"]],[2213,11,2213,43,[2,[],"exposedOrderWithPrivateLastTests"]],[2214,11,2214,44,[2,[],"exposedOrderWithPrivateFirstTests"]],[2215,11,2215,26,[2,[],"typesFirstTests"]],[2216,11,2216,25,[2,[],"typesLastTests"]],[2217,11,2217,26,[2,[],"portsFirstTests"]],[2218,11,2218,25,[2,[],"portsLastTests"]]]]]]]]]]]]],[2222,1,2248,10,[0,[[0],[1,[2222,1,2222,14,[[2222,1,2222,7,"passes"],[2222,10,2222,14,[1,[2222,10,2222,14,[[],"Test"]],[]]]]]],[2223,1,2248,10,[[2223,1,2223,7,"passes"],[],[2224,5,2248,10,[0,[[2224,5,2224,13,[2,[],"describe"]],[2224,14,2224,27,[5,"passes when"]],[2225,9,2248,10,[9,[[2225,11,2236,50,[1,"<|",1,[2225,11,2225,36,[0,[[2225,11,2225,15,[2,[],"test"]],[2225,16,2225,36,[5,"single declaration"]]]]],[2226,13,2236,50,[18,[[[2226,14,2226,16,[1]]],[2227,17,2236,50,[1,"|>",0,[2227,17,2235,26,[1,"|>",0,[2227,17,2230,4,[5,"module A exposing (..)\nf =\n    foo\n"]],[2231,24,2235,26,[0,[[2231,24,2231,39,[2,["Review","Test"],"run"]],[2232,25,2235,26,[7,[2232,26,2234,36,[1,"|>",0,[2232,26,2233,46,[1,"|>",0,[2232,26,2232,50,[2,[],"sortTopLevelDeclarations"]],[2233,32,2233,46,[2,[],"alphabetically"]]]],[2234,32,2234,36,[2,[],"rule"]]]]]]]]]]],[2236,24,2236,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2237,11,2247,50,[1,"<|",1,[2237,11,2237,30,[0,[[2237,11,2237,15,[2,[],"test"]],[2237,16,2237,30,[5,"no orderings"]]]]],[2238,13,2247,50,[18,[[[2238,14,2238,16,[1]]],[2239,17,2247,50,[1,"|>",0,[2239,17,2246,26,[1,"|>",0,[2239,17,2242,4,[5,"module A exposing (..)\nf =\n    foo\n"]],[2243,24,2246,26,[0,[[2243,24,2243,39,[2,["Review","Test"],"run"]],[2244,25,2246,26,[7,[2244,26,2245,36,[1,"|>",0,[2244,26,2244,50,[2,[],"sortTopLevelDeclarations"]],[2245,32,2245,36,[2,[],"rule"]]]]]]]]]]],[2247,24,2247,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]]]]]]]]]]]]],[2251,1,2365,10,[0,[[0],[1,[2251,1,2251,23,[[2251,1,2251,16,"portsFirstTests"],[2251,19,2251,23,[1,[2251,19,2251,23,[[],"Test"]],[]]]]]],[2252,1,2365,10,[[2252,1,2252,16,"portsFirstTests"],[],[2253,5,2365,10,[0,[[2253,5,2253,13,[2,[],"describe"]],[2253,14,2253,26,[5,"portsFirst"]],[2254,9,2365,10,[9,[[2254,11,2293,50,[1,"<|",1,[2254,11,2254,37,[0,[[2254,11,2254,15,[2,[],"test"]],[2254,16,2254,37,[5,"passes when ordered"]]]]],[2255,13,2293,50,[18,[[[2255,14,2255,16,[1]]],[2256,17,2293,50,[1,"|>",0,[2256,17,2292,26,[1,"|>",0,[2256,17,2284,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n"]],[2285,24,2292,26,[0,[[2285,24,2285,39,[2,["Review","Test"],"run"]],[2286,25,2292,26,[7,[2286,26,2291,36,[1,"|>",0,[2286,26,2290,46,[1,"|>",0,[2286,26,2289,59,[1,"|>",0,[2286,26,2288,42,[1,"|>",0,[2286,26,2287,42,[1,"|>",0,[2286,26,2286,50,[2,[],"sortTopLevelDeclarations"]],[2287,32,2287,42,[2,[],"portsFirst"]]]],[2288,32,2288,42,[2,[],"typesFirst"]]]],[2289,32,2289,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2290,32,2290,46,[2,[],"alphabetically"]]]],[2291,32,2291,36,[2,[],"rule"]]]]]]]]]]],[2293,24,2293,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2294,11,2364,26,[1,"<|",1,[2294,11,2294,37,[0,[[2294,11,2294,15,[2,[],"test"]],[2294,16,2294,37,[5,"fails when unsorted"]]]]],[2295,13,2364,26,[18,[[[2295,14,2295,16,[1]]],[2296,17,2364,26,[1,"|>",0,[2296,17,2332,26,[1,"|>",0,[2296,17,2324,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[2325,24,2332,26,[0,[[2325,24,2325,39,[2,["Review","Test"],"run"]],[2326,25,2332,26,[7,[2326,26,2331,36,[1,"|>",0,[2326,26,2330,46,[1,"|>",0,[2326,26,2329,59,[1,"|>",0,[2326,26,2328,42,[1,"|>",0,[2326,26,2327,42,[1,"|>",0,[2326,26,2326,50,[2,[],"sortTopLevelDeclarations"]],[2327,32,2327,42,[2,[],"portsFirst"]]]],[2328,32,2328,42,[2,[],"typesFirst"]]]],[2329,32,2329,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2330,32,2330,46,[2,[],"alphabetically"]]]],[2331,32,2331,36,[2,[],"rule"]]]]]]]]]]],[2333,24,2364,26,[0,[[2333,24,2333,48,[2,["Review","Test"],"expectErrors"]],[2334,25,2364,26,[9,[[2334,27,2363,4,[1,"|>",0,[2334,27,2334,45,[0,[[2334,27,2334,40,[2,[],"unsortedError"]],[2334,41,2334,45,[2,[],"True"]]]]],[2335,32,2363,4,[0,[[2335,32,2335,53,[2,["Review","Test"],"whenFixed"]],[2335,54,2363,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2368,1,2482,10,[0,[[0],[1,[2368,1,2368,22,[[2368,1,2368,15,"portsLastTests"],[2368,18,2368,22,[1,[2368,18,2368,22,[[],"Test"]],[]]]]]],[2369,1,2482,10,[[2369,1,2369,15,"portsLastTests"],[],[2370,5,2482,10,[0,[[2370,5,2370,13,[2,[],"describe"]],[2370,14,2370,25,[5,"portsLast"]],[2371,9,2482,10,[9,[[2371,11,2410,50,[1,"<|",1,[2371,11,2371,37,[0,[[2371,11,2371,15,[2,[],"test"]],[2371,16,2371,37,[5,"passes when ordered"]]]]],[2372,13,2410,50,[18,[[[2372,14,2372,16,[1]]],[2373,17,2410,50,[1,"|>",0,[2373,17,2409,26,[1,"|>",0,[2373,17,2401,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n\nport b: String -> Cmd msg\n"]],[2402,24,2409,26,[0,[[2402,24,2402,39,[2,["Review","Test"],"run"]],[2403,25,2409,26,[7,[2403,26,2408,36,[1,"|>",0,[2403,26,2407,46,[1,"|>",0,[2403,26,2406,59,[1,"|>",0,[2403,26,2405,42,[1,"|>",0,[2403,26,2404,41,[1,"|>",0,[2403,26,2403,50,[2,[],"sortTopLevelDeclarations"]],[2404,32,2404,41,[2,[],"portsLast"]]]],[2405,32,2405,42,[2,[],"typesFirst"]]]],[2406,32,2406,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2407,32,2407,46,[2,[],"alphabetically"]]]],[2408,32,2408,36,[2,[],"rule"]]]]]]]]]]],[2410,24,2410,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2411,11,2481,26,[1,"<|",1,[2411,11,2411,37,[0,[[2411,11,2411,15,[2,[],"test"]],[2411,16,2411,37,[5,"fails when unsorted"]]]]],[2412,13,2481,26,[18,[[[2412,14,2412,16,[1]]],[2413,17,2481,26,[1,"|>",0,[2413,17,2449,26,[1,"|>",0,[2413,17,2441,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[2442,24,2449,26,[0,[[2442,24,2442,39,[2,["Review","Test"],"run"]],[2443,25,2449,26,[7,[2443,26,2448,36,[1,"|>",0,[2443,26,2447,46,[1,"|>",0,[2443,26,2446,59,[1,"|>",0,[2443,26,2445,42,[1,"|>",0,[2443,26,2444,41,[1,"|>",0,[2443,26,2443,50,[2,[],"sortTopLevelDeclarations"]],[2444,32,2444,41,[2,[],"portsLast"]]]],[2445,32,2445,42,[2,[],"typesFirst"]]]],[2446,32,2446,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2447,32,2447,46,[2,[],"alphabetically"]]]],[2448,32,2448,36,[2,[],"rule"]]]]]]]]]]],[2450,24,2481,26,[0,[[2450,24,2450,48,[2,["Review","Test"],"expectErrors"]],[2451,25,2481,26,[9,[[2451,27,2480,4,[1,"|>",0,[2451,27,2451,45,[0,[[2451,27,2451,40,[2,[],"unsortedError"]],[2451,41,2451,45,[2,[],"True"]]]]],[2452,32,2480,4,[0,[[2452,32,2452,53,[2,["Review","Test"],"whenFixed"]],[2452,54,2480,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n\nc =\n    bar\n\nport b: String -> Cmd msg\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2485,1,2603,10,[0,[[0],[1,[2485,1,2485,23,[[2485,1,2485,16,"typesFirstTests"],[2485,19,2485,23,[1,[2485,19,2485,23,[[],"Test"]],[]]]]]],[2486,1,2603,10,[[2486,1,2486,16,"typesFirstTests"],[],[2487,5,2603,10,[0,[[2487,5,2487,13,[2,[],"describe"]],[2487,14,2487,26,[5,"typesFirst"]],[2488,9,2603,10,[9,[[2488,11,2528,50,[1,"<|",1,[2488,11,2488,37,[0,[[2488,11,2488,15,[2,[],"test"]],[2488,16,2488,37,[5,"passes when ordered"]]]]],[2489,13,2528,50,[18,[[[2489,14,2489,16,[1]]],[2490,17,2528,50,[1,"|>",0,[2490,17,2527,26,[1,"|>",0,[2490,17,2520,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n{-| Z\n-}\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\nc =\n    bar\n"]],[2521,24,2527,26,[0,[[2521,24,2521,39,[2,["Review","Test"],"run"]],[2522,25,2527,26,[7,[2522,26,2526,36,[1,"|>",0,[2522,26,2525,46,[1,"|>",0,[2522,26,2524,59,[1,"|>",0,[2522,26,2523,42,[1,"|>",0,[2522,26,2522,50,[2,[],"sortTopLevelDeclarations"]],[2523,32,2523,42,[2,[],"typesFirst"]]]],[2524,32,2524,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2525,32,2525,46,[2,[],"alphabetically"]]]],[2526,32,2526,36,[2,[],"rule"]]]]]]]]]]],[2528,24,2528,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2529,11,2602,26,[1,"<|",1,[2529,11,2529,37,[0,[[2529,11,2529,15,[2,[],"test"]],[2529,16,2529,37,[5,"fails when unsorted"]]]]],[2530,13,2602,26,[18,[[[2530,14,2530,16,[1]]],[2531,17,2602,26,[1,"|>",0,[2531,17,2568,26,[1,"|>",0,[2531,17,2561,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\ntype A\n    = A\n\nz =\n    zed\n{-| Z\n-}\ntype alias Z =\n    A\n\na =\n    foo\n"]],[2562,24,2568,26,[0,[[2562,24,2562,39,[2,["Review","Test"],"run"]],[2563,25,2568,26,[7,[2563,26,2567,36,[1,"|>",0,[2563,26,2566,46,[1,"|>",0,[2563,26,2565,59,[1,"|>",0,[2563,26,2564,42,[1,"|>",0,[2563,26,2563,50,[2,[],"sortTopLevelDeclarations"]],[2564,32,2564,42,[2,[],"typesFirst"]]]],[2565,32,2565,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2566,32,2566,46,[2,[],"alphabetically"]]]],[2567,32,2567,36,[2,[],"rule"]]]]]]]]]]],[2569,24,2602,26,[0,[[2569,24,2569,48,[2,["Review","Test"],"expectErrors"]],[2570,25,2602,26,[9,[[2570,27,2601,4,[1,"|>",0,[2570,27,2570,45,[0,[[2570,27,2570,40,[2,[],"unsortedError"]],[2570,41,2570,45,[2,[],"True"]]]]],[2571,32,2601,4,[0,[[2571,32,2571,53,[2,["Review","Test"],"whenFixed"]],[2571,54,2601,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\ntype A\n    = A\n{-| Z\n-}\ntype alias Z =\n    A\n\nz =\n    zed\n\na =\n    foo\n{-| Port doc comment\n-}\nport b: String -> Cmd msg\n\nc =\n    bar\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2606,1,2718,10,[0,[[0],[1,[2606,1,2606,22,[[2606,1,2606,15,"typesLastTests"],[2606,18,2606,22,[1,[2606,18,2606,22,[[],"Test"]],[]]]]]],[2607,1,2718,10,[[2607,1,2607,15,"typesLastTests"],[],[2608,5,2718,10,[0,[[2608,5,2608,13,[2,[],"describe"]],[2608,14,2608,25,[5,"typesLast"]],[2609,9,2718,10,[9,[[2609,11,2647,50,[1,"<|",1,[2609,11,2609,37,[0,[[2609,11,2609,15,[2,[],"test"]],[2609,16,2609,37,[5,"passes when ordered"]]]]],[2610,13,2647,50,[18,[[[2610,14,2610,16,[1]]],[2611,17,2647,50,[1,"|>",0,[2611,17,2646,26,[1,"|>",0,[2611,17,2639,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nz =\n    zed\n\na =\n    foo\n\nport b: String -> Cmd msg\n\nc =\n    bar\n\ntype A\n    = A\n\ntype alias Z =\n    A\n"]],[2640,24,2646,26,[0,[[2640,24,2640,39,[2,["Review","Test"],"run"]],[2641,25,2646,26,[7,[2641,26,2645,36,[1,"|>",0,[2641,26,2644,46,[1,"|>",0,[2641,26,2643,59,[1,"|>",0,[2641,26,2642,41,[1,"|>",0,[2641,26,2641,50,[2,[],"sortTopLevelDeclarations"]],[2642,32,2642,41,[2,[],"typesLast"]]]],[2643,32,2643,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2644,32,2644,46,[2,[],"alphabetically"]]]],[2645,32,2645,36,[2,[],"rule"]]]]]]]]]]],[2647,24,2647,50,[2,["Review","Test"],"expectNoErrors"]]]]]]]]],[2648,11,2717,26,[1,"<|",1,[2648,11,2648,37,[0,[[2648,11,2648,15,[2,[],"test"]],[2648,16,2648,37,[5,"fails when unsorted"]]]]],[2649,13,2717,26,[18,[[[2649,14,2649,16,[1]]],[2650,17,2717,26,[1,"|>",0,[2650,17,2685,26,[1,"|>",0,[2650,17,2678,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nc =\n    bar\n\ntype A\n    = A\n\nz =\n    zed\n\nport b: String -> Cmd msg\n\ntype alias Z =\n    A\n\na =\n    foo\n"]],[2679,24,2685,26,[0,[[2679,24,2679,39,[2,["Review","Test"],"run"]],[2680,25,2685,26,[7,[2680,26,2684,36,[1,"|>",0,[2680,26,2683,46,[1,"|>",0,[2680,26,2682,59,[1,"|>",0,[2680,26,2681,41,[1,"|>",0,[2680,26,2680,50,[2,[],"sortTopLevelDeclarations"]],[2681,32,2681,41,[2,[],"typesLast"]]]],[2682,32,2682,59,[2,[],"exposedOrderWithPrivateLast"]]]],[2683,32,2683,46,[2,[],"alphabetically"]]]],[2684,32,2684,36,[2,[],"rule"]]]]]]]]]]],[2686,24,2717,26,[0,[[2686,24,2686,48,[2,["Review","Test"],"expectErrors"]],[2687,25,2717,26,[9,[[2687,27,2716,4,[1,"|>",0,[2687,27,2687,45,[0,[[2687,27,2687,40,[2,[],"unsortedError"]],[2687,41,2687,45,[2,[],"True"]]]]],[2688,32,2716,4,[0,[[2688,32,2688,53,[2,["Review","Test"],"whenFixed"]],[2688,54,2716,4,[5,"port module A exposing\n    ( A, z\n    , Z\n    )\n\n{-|\n\n@docs A, z\n@docs Z\n\n-}\n\nz =\n    zed\n\na =\n    foo\n\nport b: String -> Cmd msg\n\nc =\n    bar\n\ntype A\n    = A\n\ntype alias Z =\n    A\n"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[2721,1,2733,10,[0,[[0],[1,[2721,1,2721,50,[[2721,1,2721,14,"unsortedError"],[2721,17,2721,50,[6,[2721,17,2721,21,[1,[2721,17,2721,21,[[],"Bool"]],[]]],[2721,25,2721,50,[1,[2721,25,2721,50,[["Review","Test"],"ExpectedError"]],[]]]]]]]],[2722,1,2733,10,[[2722,1,2722,14,"unsortedError"],[[2722,15,2722,25,[11,"portModule"]]],[2723,5,2733,10,[0,[[2723,5,2723,22,[2,["Review","Test"],"error"]],[2724,9,2733,10,[8,[[2724,11,2725,129,[[2724,11,2724,18,"details"],[2725,13,2725,129,[9,[[2725,15,2725,127,[5,"Top-level declarations were found out of order.  They should be sorted as specified in the rule configuration."]]]]]]],[2726,11,2727,9,[[2726,11,2726,18,"message"],[2726,21,2726,61,[5,"Top-level declarations are not sorted."]]]],[2727,11,2733,9,[[2727,11,2727,16,"under"],[2728,13,2732,25,[11,[2728,16,2728,26,[2,[],"portModule"]],[2729,17,2729,30,[5,"port module"]],[2732,17,2732,25,[5,"module"]]]]]]]]]]]]]]]]]],[]]]
